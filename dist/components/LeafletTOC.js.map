{"version":3,"sources":["components/LeafletTOC.js"],"names":["LeafletTOC","props","toggleSelected","layer","setState","layers","state","map","id","title","Component","propTypes","arrayOf","instanceOf","isRequired","string"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AAGA;;;;AACA;;;;;;;;;;;AAHA;;IAKqBA,U;;;AAOnB,sBAAYC,KAAZ,EAAmB;AAAA;;AAGjB;AAHiB,wHACXA,KADW;;AAAA,UASnBC,cATmB,GASF,UAACC,KAAD,EAAW;AAC1B;AACAA,YAAMD,cAAN;AACA,YAAKE,QAAL,CAAc,EAAEC,QAAQ,MAAKC,KAAL,CAAWD,MAArB,EAAd;AACD,KAbkB;;AAIjB,UAAKC,KAAL,GAAa;AACXD,cAAQJ,MAAMI;AADH,KAAb;AAJiB;AAOlB;;;;;;AAQD;AACA;AACA;AACA;AACA;;6BAES;AAAA;;AACP,UAAIA,SAAS,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,GAAlB,CAAsB,UAACJ,KAAD;AAAA,eAAW,uDAAa,OAAOA,KAApB,EAA2B,gBAAgB,OAAKD,cAAhD,EAAgE,KAAKC,MAAMK,EAA3E,GAAX;AAAA,OAAtB,CAAb;;AAEA,aACE;AAAA;AAAA,UAAK,WAAU,uBAAf;AACE;AAAA;AAAA;AAAK,eAAKP,KAAL,CAAWQ;AAAhB,SADF;AAEE;AAAA;AAAA,YAAI,WAAU,QAAd;AACGJ;AADH;AAFF,OADF;AAQD;;;;EAvCqC,gBAAMK,S;;AAAzBV,U,CAEZW,S,GAAY;AACjBN,UAAQ,oBAAUO,OAAV,CAAkB,oBAAUC,UAAV,sBAAlB,EAA4CC,UADnC;AAEjBL,SAAO,oBAAUM,MAAV,CAAiBD;AAFP,C;kBAFAd,U","file":"LeafletTOC.js","sourcesContent":["import NestedLayer from './NestedLayer';\nimport NL from '../Leaflet.TOC.NestedLayer';\n// import NestedLayerTreeHelper from '../Leaflet.TOC.NestedLayerTreeHelper';\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class LeafletTOC extends React.Component {\n\n  static propTypes = {\n    layers: PropTypes.arrayOf(PropTypes.instanceOf(NL)).isRequired,\n    title: PropTypes.string.isRequired\n  };\n\n  constructor(props) {\n    super(props);\n\n    // the initial state is a reference to the layers prop\n    this.state = {\n      layers: props.layers\n    };\n  }\n\n  toggleSelected = (layer) => {\n    // let layers = this.state.layers;\n    layer.toggleSelected();\n    this.setState({ layers: this.state.layers });\n  }\n\n  // toggleEnabled = (layer) => {\n  //   console.log('toggling enabled state of', layer);\n  //   layer.toggleEnabled();\n  //   this.setState({ layers: this.state.layers });\n  // }\n\n  render() {\n    let layers = this.state.layers.map((layer) => <NestedLayer layer={layer} toggleSelected={this.toggleSelected} key={layer.id} />);\n\n    return (\n      <div className=\"leaflet-toc-container\">\n        <h2>{this.props.title}</h2>\n        <ul className=\"branch\">\n          {layers}\n        </ul>\n      </div>\n    );\n  }\n\n}\n"],"sourceRoot":"/mnt/c/dev/Leaflet.Control.NestedLayers/src"}