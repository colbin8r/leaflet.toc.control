{"version":3,"sources":["components/MapSymbology.js"],"names":["MapSymbology","symbols","props","symbology","map","symbol","Component","propTypes","instanceOf","isRequired"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;IAEqBA,Y;;;;;;;;;;;6BAMV;AACP,UAAIC,UAAU,KAAKC,KAAL,CAAWC,SAAX,CAAqBF,OAArB,CAA6BG,GAA7B,CAAiC,UAACC,MAAD,EAAY;AACzD,eAAO,qDAAW,QAAQA,MAAnB,EAA2B,KAAK,8BAAhC,GAAP;AACD,OAFa,CAAd;;AAIA,aACE;AAAA;AAAA,UAAI,WAAU,WAAd;AACGJ;AADH,OADF;AAMD;;;;EAjBuC,gBAAMK,S;;AAA3BN,Y,CAEZO,S,GAAY;AACjBJ,aAAW,oBAAUK,UAAV,uBAAgCC;AAD1B,C;kBAFAT,Y","file":"MapSymbology.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport MapSymbol from './MapSymbol';\nimport Symbology from '../Leaflet.TOC.MapSymbology';\nimport { generateID } from '../Leaflet.TOC.NestedLayer';\n\nexport default class MapSymbology extends React.Component {\n\n  static propTypes = {\n    symbology: PropTypes.instanceOf(Symbology).isRequired\n  };\n\n  render() {\n    let symbols = this.props.symbology.symbols.map((symbol) => {\n      return <MapSymbol symbol={symbol} key={generateID()} />\n    });\n\n    return (\n      <ul className=\"symbology\">\n        {symbols}\n      </ul>\n    );\n\n  }\n\n}\n"],"sourceRoot":"/mnt/c/dev/Leaflet.Control.NestedLayers/src"}