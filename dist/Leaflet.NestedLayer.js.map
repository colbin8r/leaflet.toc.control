{"version":3,"sources":["Leaflet.NestedLayer.js"],"names":["NestedLayer","options","_props","children","enabled","selected","_isAttached","id","Error","name","layer","map","Object","assign","child","TypeError","push","addTo","removeFrom","val","disabled","_attach","_detach","window","L","nestedLayer"],"mappings":"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","file":"Leaflet.NestedLayer.js","sourcesContent":["/* global L, window */\nexport class NestedLayer {\n\n  // options include:\n  // 'id' number (req'd), 'name' string (req'd), 'layer' object (req'd), 'map' object (req'd)\n  // 'enabled' boolean (optional), 'selected' boolean (optional),\n  // 'children' array (optional)\n  constructor(options) {\n    // set default props for optional options\n    this._props = { children: [], enabled: true, selected: false }\n    this._isAttached = false;\n\n    if (typeof options.id == 'undefined') {\n      throw new Error('Missing ID when creating NestedLayer');\n    }\n    if (typeof options.name == 'undefined') {\n      throw new Error('Missing name when creating NestedLayer');\n    }\n    if (typeof options.layer == 'undefined') {\n      throw new Error('Missing layer object when creating NestedLayer');\n    }\n    if (typeof options.map == 'undefined') {\n      throw new Error('Missing map object when creating NestedLayer');\n    }\n\n    Object.assign(this._props, options);\n  }\n\n  get id() {\n    return this._props.id;\n  }\n\n  get name() {\n    return this._props.name;\n  }\n\n  get layer() {\n    return this._props.layer;\n  }\n\n  get map() {\n    return this._props.map;\n  }\n\n  get children() {\n    return this._props.children;\n  }\n\n  // enabled = user may freely toggle this layer on and off\n  // disabled = user may not toggle the layer\n  // disabling always deselects the layer, but the selected state is persisted, so that if\n  // the layer is re-enabled, the selected state is what it was prior to disabling\n  // i.e. if disabled, always deselected\n  // this logic is handled in the .selected getter\n  get enabled() {\n    return this._props.enabled;\n  }\n  set enabled(val) {\n    this._props.enabled = val;\n  }\n\n  // selected = layer present on the map\n  // deselected = layer not present on the map\n  get selected() {\n    if (this.disabled) {\n      return false;\n    } else {\n      return this._props.selected;\n    }\n  }\n  set selected(val) {\n    this._props.selected = val;\n\n    // attach/detach from map when needed\n    if (this.selected) {\n      this._attach();\n    } else {\n      this._detach();\n    }\n  }\n\n  // convenience methods to change state\n  enable() {\n    this.enabled = true;\n  }\n  disable() {\n    this.enabled = false;\n  }\n  toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n  select() {\n    this.selected = true;\n  }\n  deselect() {\n    this.selected = false;\n  }\n  toggleSelected() {\n    this.selected = !this.selected;\n  }\n\n  // convenience properties that reflect state\n  get disabled() {\n    return !this.enabled;\n  }\n  get deselected() {\n    return !this.selected;\n  }\n\n  // add a child NestedLayer object\n  addChild(child) {\n    if (!(child instanceof NestedLayer)) {\n      throw new TypeError('child is not a NestedLayer');\n    }\n    this._props.children.push(child);\n  }\n\n  // display on map\n  _attach() {\n    if (!this._isAttached) {\n      this.layer.addTo(this.map);\n      this._isAttached = true;\n    }\n  }\n\n  // remove from map\n  _detach() {\n    if (this._isAttached) {\n      this.layer.removeFrom(this.map);\n      this._isAttached = false;\n    }\n  }\n}\n\nif (typeof window != 'undefined') {\n  L.nestedLayer = function nestedLayer(options) {\n    return new NestedLayer(options);\n  };\n}\n"],"sourceRoot":"/mnt/c/dev/Leaflet.Control.NestedLayers/src"}