[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Leaflet.Control.NestedLayers.js",
    "content": "// import chalk from 'chalk';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport LayerHierarchy from './Leaflet.LayerHierarchy';\nimport NestedLayer from './Leaflet.NestedLayer';\nimport classnames from 'classnames';\n\n/**\n * React component to represent a LayerHierarchy\n * @param {object} props The component's props.\n * @param {LayerHierarchy} props.hierarchy The LayerHierarchy the component displays.\n */\nexport class NestedLayersComponent extends React.Component {\n  /**\n   * @param {object} props The component's props.\n   * @param {LayerHierarchy} props.hierarchy The LayerHierarchy the component displays.\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      hierarchy: this.props.hierarchy\n    }\n  }\n\n  /**\n   * Describes the React props object\n   * @type {Object}\n   */\n  static propTypes = {\n    hierarchy: PropTypes.instanceOf(LayerHierarchy).isRequired\n  };\n\n  /**\n   * Generates a unique key for rendering a layer in JSX\n   * @param  {NestedLayer} layer The layer to use data from\n   * @return {string}       A string unique to this layer\n   */\n  makeLayerKey(layer) {\n    return (layer.id.toString + layer.name);\n  }\n\n  /**\n   * Event handler to toggle a layer's selected state\n   * @param  {NestedLayer} layer The layer to toggle\n   */\n  handleToggleSelected = (layer) => {\n    const id = layer.id;\n    const newHierarchy = this.state.hierarchy;\n    newHierarchy.getLayerByID(id).toggleSelected();\n    this.setState({\n      hierarchy: newHierarchy\n    });\n  }\n\n  /**\n   * Recursively renders a NestedLayer using NestedLayerComponent. If the NestedLayer has\n   * children, use this function as it not only renders a single NestedLayer, but also the subtree\n   * of layers under the NestedLayer recursively.\n   * @param  {NestedLayer} layer The layer to represent with a React component\n   * @return {NestedLayerComponent}       A react component representing the given NestedLayer.\n   */\n  makeComponentFromLayer = (layer) => {\n    // recursive function\n    // 'leaf' is the base case\n    // property initializer syntax + arrow function keeps the scope of 'this' through recursive calls\n    let componentChildren;\n\n    // branch: this layer has children\n    if (layer.children.length > 0) {\n      // leaves = layer.children.map(this.makeComponentFromLayer)\n      componentChildren = (\n        <ul className=\"branch\">\n          {layer.children.map(this.makeComponentFromLayer)}\n        </ul>\n      );\n    }\n\n    return (\n      <NestedLayerComponent layer={layer} onToggleSelected={this.handleToggleSelected} key={this.makeLayerKey(layer)}>\n        {componentChildren}\n      </NestedLayerComponent>\n    );\n\n  }\n\n  /**\n   * Renders the component\n   * @return {Component} JSX\n   */\n  render() {\n    const roots = this.state.hierarchy.rootLayers;\n    let components = [];\n\n    for (let i = 0; i < roots.length; i++) {\n      components.push(this.makeComponentFromLayer(roots[i]));\n    }\n\n    return (\n      <div className=\"nested-layer-control-container\">\n        <h2>TOC CONTROL</h2>\n        <ul className=\"branch nested-layer-control\">\n          {components}\n        </ul>\n      </div>\n    );\n  }\n}\n\n/**\n * React Component to represent a single NestedLayer\n * @param {object} props Component properties\n * @param {NestedLayer} props.layer The layer to represent\n * @param {function} props.onToggleSelected The callback to change the layer's selected state\n */\nexport class NestedLayerComponent extends React.Component {\n  /**\n   * @param {object} props Component properties\n   * @param {NestedLayer} props.layer The layer to represent\n   * @param {function} props.onToggleSelected The callback to change the layer's selected state\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * Describes the React props object\n   * @type {Object}\n   */\n  static propTypes = {\n    layer: PropTypes.instanceOf(NestedLayer).isRequired,\n    onToggleSelected: PropTypes.func.isRequired,\n    children: PropTypes.any\n  };\n\n  /**\n   * Calls the toggle selected state handler passed by the parent to change the selected state of\n   * the layer\n   */\n  toggleSelected = () => {\n    // updates both the component state and the LayerHierarchy structure\n    this.props.onToggleSelected(this.props.layer);\n  }\n\n  /**\n   * Returns a data URL suitable for use in a the src of an <img /> that contains the base 64\n   * encoded layer swatch\n   * @return {string} data URL containing the swatch\n   */\n  getSwatch = () => {\n    return 'data:image/png;base64,' + this.props.layer.swatch;\n  }\n\n  /**\n   * Renders the component\n   * @return {Component} JSX\n   */\n  render() {\n    const itemClassNames = classnames({\n      leaf: true,\n      enabled: this.props.layer.enabled,\n      disabled: this.props.layer.disabled\n    });\n    return (\n      <li className={itemClassNames}>\n        <input type=\"checkbox\" checked={this.props.layer.selected} />\n        {this.props.layer.swatch.length > 0 &&\n          <img src={this.getSwatch()} className=\"swatch\" />\n        }\n        <span className=\"layer-name\" onClick={this.toggleSelected}>{this.props.layer.name}</span>\n\n        {this.props.children}\n      </li>\n    );\n  }\n}\n\n/**\n * Leaflet plugin to display a hierarchial version of {@link http://leafletjs.com/reference-1.1.0.html#control-layers L.Control.Layers}. Uses React to wrap the\n * NestedLayersComponent.\n * @param  {LayerHierarchy} hierarchy The hierarchy to display in the control\n * @param  {Element} element   The DOM element to bind the control to\n * @param  {object} options   Configuration options that dictate how the control should behave\n */\nexport default class NestedLayers {\n\n  /**\n   * Initialize the plugin and {@link #NestedLayers#attach attaches} to the DOM.\n   * @param  {LayerHierarchy} hierarchy The hierarchy to display in the control\n   * @param  {Element} element   The DOM element to bind the control to\n   * @param  {object} options   Configuration options that dictate how the control should behave\n   * @param  {boolean} [options.followAncestorVisibility=true] Deselecting any ancestor makes its\n   * children invisible (without changing their selected state)\n   * @param {boolean} [options.propogateDeselectToChildren=false] Deselecting a parent also deselects\n   * children (by changing their state)\n   * @param {boolean} [options.followAncestorMutability=true] Deselecting any ancestor disables its\n   * children (cannot change children's selected state)\n   */\n  constructor(hierarchy, element, options) {\n\n    if (typeof hierarchy == 'undefined') {\n      throw new Error('Missing hierarchy when creating NestedLayers control');\n    }\n    this.hierarchy = hierarchy;\n    if (typeof element == 'undefined') {\n      throw new Error('Missing DOM element when creating NestedLayers control');\n    }\n    this.element = element;\n\n    // default options\n    this._options = {\n      followAncestorVisibility: true,\n      propogateDeselectToChildren: false,\n      followAncestorMutability: true\n    };\n\n    // overwrite defaults with passed options\n    Object.assign(this._options, options);\n\n    this._component = <NestedLayersComponent hierarchy={this.hierarchy} />\n\n    this._isAttached = false;\n\n    // bind to the DOM\n    this.attach();\n  }\n\n  /**\n   * The underlying hierarchy of layers the plugin visually represents\n   * @type {LayerHierarchy}\n   */\n  get hierarchy() {\n    return this._hierarchy;\n  }\n  /**\n   * Shorthand accessor for the {@link #NestedLayers#hierarchy hierarchy} property\n   */\n  get h() {\n    return this.hierarchy;\n  }\n  set hierarchy(val) {\n    this._hierarchy = val;\n  }\n\n  /**\n   * The DOM element that the control attaches to\n   * @type {Element}\n   */\n  get element() {\n    return this._element;\n  }\n  /**\n   * Shorthand accessor for the {@link #NestedLayers#element element} property\n   */\n  get el() {\n    return this.element;\n  }\n  set element(val) {\n    this._element = val;\n  }\n\n  /**\n   * The React component under the hood\n   * @type {NestedLayersComponent}\n   */\n  get component() {\n    return this._component;\n  }\n\n  /**\n   * True if the plugin has attached itself to the DOM element\n   * @type {boolean}\n   */\n  get isAttached() {\n    return this._isAttached;\n  }\n  // no direct setting of 'isAttached' from outside the class\n  // the attach() and detach() methods handle this state\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Bind to the DOM. Internally, it checks to see if it has already been attached, and if not,\n   * uses React to render the {@link #NestedLayers#component component} to the specified {@link\n   * #NestedLayers#element element}.\n   */\n  attach() {\n    if (!this.isAttached) {\n      ReactDOM.render(\n        this.component,\n        this.element\n      );\n    }\n    this._isAttached = true;\n  }\n\n  /**\n   * Unbind from the DOM. Releases the {@link #NestedLayers#element element} for reuse.\n   */\n  detach() {\n    if (this.isAttached) {\n      ReactDOM.unmountComponentAtNode(this.element);\n    }\n    this._isAttached = true;\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "class",
    "name": "NestedLayersComponent",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "{NestedLayersComponent}",
    "description": "React component to represent a LayerHierarchy",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The component's props."
      },
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "props.hierarchy",
        "description": "The LayerHierarchy the component displays."
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 2,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The component's props."
      },
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "props.hierarchy",
        "description": "The LayerHierarchy the component displays."
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "member",
    "name": "state",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#state",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"hierarchy\": *}"
      ]
    }
  },
  {
    "__docId__": 4,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent.propTypes",
    "access": null,
    "description": "Describes the React props object",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 5,
    "kind": "method",
    "name": "makeLayerKey",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#makeLayerKey",
    "access": null,
    "description": "Generates a unique key for rendering a layer in JSX",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to use data from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A string unique to this layer"
    }
  },
  {
    "__docId__": 6,
    "kind": "member",
    "name": "handleToggleSelected",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#handleToggleSelected",
    "access": null,
    "description": "Event handler to toggle a layer's selected state",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to toggle"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 7,
    "kind": "member",
    "name": "makeComponentFromLayer",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#makeComponentFromLayer",
    "access": null,
    "description": "Recursively renders a NestedLayer using NestedLayerComponent. If the NestedLayer has\nchildren, use this function as it not only renders a single NestedLayer, but also the subtree\nof layers under the NestedLayer recursively.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to represent with a React component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NestedLayerComponent"
      ],
      "spread": false,
      "description": "A react component representing the given NestedLayer."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "method",
    "name": "render",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#render",
    "access": null,
    "description": "Renders the component",
    "lineNumber": 92,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 9,
    "kind": "class",
    "name": "NestedLayerComponent",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "{NestedLayerComponent}",
    "description": "React Component to represent a single NestedLayer",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component properties"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.layer",
        "description": "The layer to represent"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onToggleSelected",
        "description": "The callback to change the layer's selected state"
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 10,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#constructor",
    "access": null,
    "description": "",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component properties"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.layer",
        "description": "The layer to represent"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onToggleSelected",
        "description": "The callback to change the layer's selected state"
      }
    ]
  },
  {
    "__docId__": 11,
    "kind": "member",
    "name": "state",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#state",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 12,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent.propTypes",
    "access": null,
    "description": "Describes the React props object",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 13,
    "kind": "member",
    "name": "toggleSelected",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#toggleSelected",
    "access": null,
    "description": "Calls the toggle selected state handler passed by the parent to change the selected state of\nthe layer",
    "lineNumber": 142,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 14,
    "kind": "member",
    "name": "getSwatch",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#getSwatch",
    "access": null,
    "description": "Returns a data URL suitable for use in a the src of an <img /> that contains the base 64\nencoded layer swatch",
    "lineNumber": 152,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "data URL containing the swatch"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "method",
    "name": "render",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#render",
    "access": null,
    "description": "Renders the component",
    "lineNumber": 160,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 16,
    "kind": "class",
    "name": "NestedLayers",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "NestedLayers",
    "description": "Leaflet plugin to display a hierarchial version of {@link http://leafletjs.com/reference-1.1.0.html#control-layers L.Control.Layers}. Uses React to wrap the\nNestedLayersComponent.",
    "lineNumber": 187,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "hierarchy",
        "description": "The hierarchy to display in the control"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The DOM element to bind the control to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the control should behave"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 17,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#constructor",
    "access": null,
    "description": "Initialize the plugin and {@link #NestedLayers#attach attaches} to the DOM.",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "hierarchy",
        "description": "The hierarchy to display in the control"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The DOM element to bind the control to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the control should behave"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorVisibility",
        "description": "Deselecting any ancestor makes its\nchildren invisible (without changing their selected state)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.propogateDeselectToChildren",
        "description": "Deselecting a parent also deselects\nchildren (by changing their state)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorMutability",
        "description": "Deselecting any ancestor disables its\nchildren (cannot change children's selected state)"
      }
    ]
  },
  {
    "__docId__": 18,
    "kind": "member",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 19,
    "kind": "member",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 20,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_options",
    "access": null,
    "description": null,
    "lineNumber": 213,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"followAncestorVisibility\": boolean, \"propogateDeselectToChildren\": *, \"followAncestorMutability\": boolean}"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "member",
    "name": "_component",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_component",
    "access": null,
    "description": null,
    "lineNumber": 222,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 22,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 23,
    "kind": "get",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": "The underlying hierarchy of layers the plugin visually represents",
    "lineNumber": 234,
    "type": {
      "nullable": null,
      "types": [
        "LayerHierarchy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 24,
    "kind": "get",
    "name": "h",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#h",
    "access": null,
    "description": "Shorthand accessor for the {@link #NestedLayers#hierarchy hierarchy} property",
    "lineNumber": 240,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "set",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 243,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 26,
    "kind": "member",
    "name": "_hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 27,
    "kind": "get",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": "The DOM element that the control attaches to",
    "lineNumber": 251,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 28,
    "kind": "get",
    "name": "el",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#el",
    "access": null,
    "description": "Shorthand accessor for the {@link #NestedLayers#element element} property",
    "lineNumber": 257,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 29,
    "kind": "set",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 30,
    "kind": "member",
    "name": "_element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_element",
    "access": null,
    "description": null,
    "lineNumber": 261,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 31,
    "kind": "get",
    "name": "component",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#component",
    "access": null,
    "description": "The React component under the hood",
    "lineNumber": 268,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayersComponent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 32,
    "kind": "get",
    "name": "isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#isAttached",
    "access": null,
    "description": "True if the plugin has attached itself to the DOM element",
    "lineNumber": 276,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 33,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 286,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 34,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#attach",
    "access": null,
    "description": "Bind to the DOM. Internally, it checks to see if it has already been attached, and if not,\nuses React to render the {@link #NestedLayers#component component} to the specified {@link\n#NestedLayers#element element}.",
    "lineNumber": 295,
    "params": []
  },
  {
    "__docId__": 35,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 302,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 36,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#detach",
    "access": null,
    "description": "Unbind from the DOM. Releases the {@link #NestedLayers#element element} for reuse.",
    "lineNumber": 308,
    "params": []
  },
  {
    "__docId__": 37,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 312,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "file",
    "name": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "content": "import LayerHierarchy from './Leaflet.LayerHierarchy';\nimport NestedLayer from './Leaflet.NestedLayer';\n\nimport { defaultsDeep as defaults } from 'lodash';\n// superagent mimics the node 'request' library on the client side as an xhr library\nimport superagent from 'superagent';\nimport Promise from 'bluebird';\nimport superagentPromise from 'superagent-promise';\nconst request = superagentPromise(superagent, Promise);\nimport { FeatureLayerService } from 'esri-leaflet';\n\n/**\n * Parses the layer data served by an ArcGIS MapServer\n * @param {string} url A valid and reachable ArcGIS MapServer URL\n * @param {L.Map} map A Leaflet Map object, which will be passed to all\n * the layers in the resulting LayerHierarchy\n * @param {object} [options] An optional configuration object\n */\nexport default class MapServerParser {\n\n  static APISuffixes = {\n    layers: '/layers',\n    legend: '/legend'\n  };\n\n  static QueryParameters = {\n    f: 'json'\n  };\n\n  static Headers = {\n    Accept: 'application/json'\n  };\n\n  /**\n   * Initializes the parser with the given parameters\n   * @param {string} url     A valid and reachable ArcGIS MapServer URL\n   * @param {L.Map} map     A Leaflet Map object, which will be passed to all\n   * the layers in the resulting LayerHierarchy\n   * @param {object} [options] An optional configuration object\n   * @param {object} [options.data] The configuration options related to what data\n   * should be parsed from the MapServer to be included on NestedLayer objects\n   * @param {boolean} [options.data.scale=true] Include minZoom and maxZoom\n   * parameters on the NestedLayer\n   * @param {boolean} [options.data.defaultVisibility=true] Include the\n   * initial selected state of the NestedLayer\n   * @param {object} [options.hierarchyOptions={}] The configuration options\n   * the NestedHierarchy takes on instantiation\n   */\n  constructor(url, map, options) {\n    // ensure required parameters are present\n    if (typeof url == 'undefined') {\n      throw new Error('Missing URL when creating MapServerParser');\n    }\n    if (typeof map == 'undefined') {\n      throw new Error('Missing Leaflet map object when creating MapServerParser');\n    }\n\n    // save url\n    this._url = url;\n\n    // save map\n    this._map = map;\n\n    // set default options\n    this._defaults = {\n      data: {\n        scale: true,\n        defaultVisibility: true,\n        swatch: false\n      },\n      hierarchyOptions: {}\n    }\n\n    // merge options with defaults\n    this._options = {};\n    // https://lodash.com/docs/4.17.4#defaultsDeep\n    defaults(this._options, options, this.defaults);\n  }\n\n  /**\n   * MapServer URL\n   * @type {string}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Leaflet Map object\n   * @type {L.Map}\n   */\n  get map() {\n    return this._map;\n  }\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Default configuration options\n   * @type {object}\n   */\n  get defaults() {\n    return this._defaults;\n  }\n\n  parse() {\n    // we have to wait for both xhr promises to resolve before we can begin processing\n    // note that Promise.join returns a promise that resolves to a LayerHierarchy\n    return Promise.join(this._queryLayers(), this._queryLegend(), (layerRes, legendRes) => {\n      // ensure we hit HTTP 2xx statuses\n      if (!layerRes.ok || !legendRes.ok) {\n        throw new Error('Bad request: HTTP status was not 2xx');\n      }\n\n      // parse the layerdata into JSON\n      let body = layerRes.body;\n      // ArcGIS does not properly set its Content-Type header\n      // so force JSON parsing if superagent did not parse automatically\n      if (layerRes.type !== MapServerParser.Headers.Accept) {\n        body = JSON.parse(layerRes.text);\n      }\n\n      // create the LayerHierarchy\n      var hierarchy = new LayerHierarchy(this.options.hierarchyOptions);\n\n      // move layers down as children of other layers\n      body.layers.forEach((node) => {\n        let layer = this._convertLayerNodeToNestedLayer(node)\n        let parent = (node.parentLayer !== null ? node.parentLayer.id : undefined);\n        // if this layer has no parent, addLayer(...) will add as a root layer\n        hierarchy.addLayer(layer, parent);\n      });\n\n      // resolve the promise with the resulting LayerHierarchy\n      // console.log(hierarchy);\n      return hierarchy;\n    });\n  }\n\n  /**\n   * Queries the layers endpoint of the MapServer for layer data.\n   * @return {Promise} Promise that resolves the request.\n   */\n  _queryLayers() {\n    // assemble layerdata url\n    const layerdataURL = this.url + MapServerParser.APISuffixes.layers;\n\n    // fetch layerdata as JSON\n    return request\n      .get(layerdataURL)\n      .set(MapServerParser.Headers)\n      .query(MapServerParser.QueryParameters)\n      .end();\n  }\n\n  _queryLegend() {\n    // assemble legend url\n    const legendURL = this.url + MapServerParser.APISuffixes.legend;\n\n    // fetch legend as JSON\n    return request\n      .get(legendURL)\n      .set(MapServerParser.Headers)\n      .query(MapServerParser.QueryParameters)\n      .end();\n  }\n\n  _convertLayerNodeToNestedLayer = (node) => {\n    let layerData = {\n      id: node.id,\n      name: node.name,\n      map: this.map\n    };\n    // Leaflet layer data\n    let leafletLayerData = {\n      url: MapServerParser._makeLayerURL(this.url, layerData.id)\n    };\n\n    // get scale/zoom data from layer node\n    if (this.options.data.scale) {\n      // converts scale factor from ArcGIS to Leaflet's zoom factor\n      // http://leafletjs.com/reference-1.1.0.html#crs-scale\n      leafletLayerData.maxZoom = this.map.options.crs.zoom(node.maxScale);\n      leafletLayerData.minZoom = this.map.options.crs.zoom(node.minScale);\n    }\n\n    // attach the Leaflet layer object to the NestedLayer's data\n    layerData.layer = new FeatureLayerService(leafletLayerData);\n\n    // use the provided NestedLayer factory to turn layerData into an owned NestedLayer\n    let layer = new NestedLayer(layerData);\n\n    // set the selected state = to the node's default visibility state\n    if (this.options.data.defaultVisibility) {\n      layer.selected = node.defaultVisibility;\n    }\n\n    // returns a NestedLayer object\n    return layer;\n  }\n\n  static _makeLayerURL(baseURL, layerID) {\n    if (typeof baseURL !== 'string') {\n      throw new Error('Base URL was undefined, null, or was not a string');\n    }\n    if (typeof layerID !== 'number') {\n      throw new Error('ID was undefined, null, or was not a number');\n    }\n\n    return baseURL + '/' + layerID.toString();\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 39,
    "kind": "variable",
    "name": "request",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~request",
    "access": null,
    "export": false,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.MapServerParser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 40,
    "kind": "class",
    "name": "MapServerParser",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.MapServerParser.js",
    "importStyle": "MapServerParser",
    "description": "Parses the layer data served by an ArcGIS MapServer",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "A valid and reachable ArcGIS MapServer URL"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A Leaflet Map object, which will be passed to all\nthe layers in the resulting LayerHierarchy"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An optional configuration object"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 41,
    "kind": "member",
    "name": "APISuffixes",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.APISuffixes",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"layers\": string, \"legend\": string}"
      ]
    }
  },
  {
    "__docId__": 42,
    "kind": "member",
    "name": "QueryParameters",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.QueryParameters",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"f\": string}"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "member",
    "name": "Headers",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.Headers",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"Accept\": string}"
      ]
    }
  },
  {
    "__docId__": 44,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#constructor",
    "access": null,
    "description": "Initializes the parser with the given parameters",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "A valid and reachable ArcGIS MapServer URL"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A Leaflet Map object, which will be passed to all\nthe layers in the resulting LayerHierarchy"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An optional configuration object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.data",
        "description": "The configuration options related to what data\nshould be parsed from the MapServer to be included on NestedLayer objects"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.data.scale",
        "description": "Include minZoom and maxZoom\nparameters on the NestedLayer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.data.defaultVisibility",
        "description": "Include the\ninitial selected state of the NestedLayer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.hierarchyOptions",
        "description": "The configuration options\nthe NestedHierarchy takes on instantiation"
      }
    ]
  },
  {
    "__docId__": 45,
    "kind": "member",
    "name": "_url",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_url",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 46,
    "kind": "member",
    "name": "_map",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_map",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 47,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_defaults",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"data\": *, \"hierarchyOptions\": *}"
      ]
    }
  },
  {
    "__docId__": 48,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_options",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 49,
    "kind": "get",
    "name": "url",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#url",
    "access": null,
    "description": "MapServer URL",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "get",
    "name": "map",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#map",
    "access": null,
    "description": "Leaflet Map object",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "L.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#defaults",
    "access": null,
    "description": "Default configuration options",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "method",
    "name": "parse",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#parse",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 54,
    "kind": "method",
    "name": "_queryLayers",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_queryLayers",
    "access": null,
    "description": "Queries the layers endpoint of the MapServer for layer data.",
    "lineNumber": 150,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise that resolves the request."
    }
  },
  {
    "__docId__": 55,
    "kind": "method",
    "name": "_queryLegend",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_queryLegend",
    "access": null,
    "description": null,
    "lineNumber": 162,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_convertLayerNodeToNestedLayer",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_convertLayerNodeToNestedLayer",
    "access": null,
    "description": null,
    "lineNumber": 174,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 57,
    "kind": "method",
    "name": "_makeLayerURL",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser._makeLayerURL",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "baseURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerID",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 58,
    "kind": "file",
    "name": "src/Leaflet.LayerHierarchy.js",
    "content": "import NestedLayer from './Leaflet.NestedLayer';\n\n/**\n * Represents a non-rooted tree structure of NestedLayer objects\n * @param {object} options Configuration options that dictate how the tree\n * should behave\n */\nexport default class LayerHierarchy {\n\n  /**\n   * @param {object} options Configuration options\n   * @param {NestedLayer[]} [options.layers=[]] Layers to include at the root\n   * level\n   * @param {boolean} [options.followAncestorVisibility=true] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   * @param {boolean} [options.propogateDeselectToChildren=false] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   * @param {boolean} [options.followAncestorMutability=true] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   */\n  constructor(options) {\n    // for the layers parameter, ensure that we are at least passed an array\n    // otherwise, default to empty array\n\n    // default options\n    this._options = {\n      // 'layers' will be deleted by the end of the constructor\n      layers: [],\n      followAncestorVisibility: true,\n      propogateDeselectToChildren: false,\n      followAncestorMutability: true\n    };\n\n    // overwrite defaults with passed options\n    Object.assign(this._options, options);\n\n    // extract the 'layers' property from 'options' into its own property\n    this._layers = this.options.layers;\n    delete this._options.layers;\n\n    this.validateEnabledStates();\n\n    this.ownAllLayers(this.layers);\n  }\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Adds a new layer into the tree. Defaults to insertion at the root of the\n   * tree, but passing a the ID of another layer will insert the layer as a\n   * child of that parent.\n   * @param {NestedLayer} layer    The layer to insert\n   * @param {?number} [parentID=null] The ID of a parent to insert underneath\n   */\n  addLayer(layer, parentID) {\n    // id, name, layer, defaultVisibility, minScale, maxScale, children\n    // layer should be a NestedLayer\n\n    if (!(layer instanceof NestedLayer)) {\n      throw new TypeError('layer is not a NestedLayer');\n    }\n\n    // take ownership of the layer\n    this.ownLayer(layer);\n\n    if (typeof parentID != 'undefined') {\n      // add as child\n      this.getLayerByID(parentID).addChild(layer);\n    } else {\n      // no parent, add at root level\n      this._layers.push(layer);\n    }\n  }\n\n  /**\n   * Finds a layer in the tree by ID. Traverses the tree recurisvely until it\n   * is found. Don't pass children unless you want to search a specific\n   * subtree.\n   * @param  {number}          id       The layer ID to search for\n   * @param  {NestedLayer[]}   [children=this.layers] A subtree to search\n   * @return {?NestedLayer}     The layer if found, or null otherwise.\n   */\n  getLayerByID(id, children) {\n\n    // if the function was not called recursively\n    if (!children) {\n      children = this._layers;\n    }\n\n    for (let i = 0; i < children.length; i++) {\n\n      // if the child matches\n      if (children[i].id == id) {\n        // return the child\n        return children[i];\n\n      } else {\n\n        // if the child has its own children\n        if (children[i].children && children[i].children.length > 0) {\n\n          // reucrisvely check them\n          let recursiveResult = this.getLayerByID(id, children[i].children);\n          if (recursiveResult !== null) {\n            return recursiveResult;\n          }\n\n        }\n      }\n\n    }\n\n    // if execution reaches here, no layers in this tree or subtree have the requested id\n    return null;\n  }\n\n  /**\n   * Root-level NestedLayer layers\n   * @type {NestedLayer[]}\n   */\n  get layers() {\n    return this._layers;\n  }\n  /**\n   * {@link #LayerHierarchy#layers Root-level NestedLayer layers}\n   * @type {NestedLayer[]}\n   */\n  get rootLayers() {\n    return this.layers;\n  }\n\n  // check all the children to ensure that they are all enabled/disabled as appropriate\n  // the highest layer takes precedence over lower layers\n  // i.e. if a root-level layer is disabled, then all its children will be disabled as well\n  // parameters should be undefined when called the first time; the function is recursive\n  validateEnabledStates(layers, newEnabledValue) {\n    // first call? then layers = the whole true\n    if (typeof layers === 'undefined') {\n      // console.log('validateEnabledStates: first call');\n      layers = this.rootLayers;\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n      // console.log('validateEnabledStates: checking', layers[i].name);\n\n      // if we have a specific enabled value, set the children to that\n      if (typeof newEnabledValue !== 'undefined') {\n        // console.log('validateEnabledStates: setting', layers[i].name, 'to', newEnabledValue);\n        layers[i].enabled = newEnabledValue;\n      }\n\n      // if the layer has children, repeat this process on them\n      // console.log('validateEnabledStates: does', layers[i].name, 'have children?', (layers[i].hasChildren ? 'yes' : 'no'));\n      if (layers[i].hasChildren) {\n        // console.log('validateEnabledStates: setting children of', layers[i].name, 'to', layers[i].enabled);\n        this.validateEnabledStates(layers[i].children, layers[i].enabled)\n      }\n\n    }\n\n  }\n\n  /**\n   * Checks if this LayerHierarchy owns the provided layer\n   * @param  {NestedLayer} layer The layer to check\n   * @return {boolean}       True if the layer is owned by this hierarchy; false otherwise\n   */\n  ownsLayer(layer) {\n    return layer.owner === this;\n  }\n\n  /**\n   * Factory method for making a new NestedLayer that is owned by this hierarchy\n   * @param  {object} layerData The same object you would provide to the {@link #NestedLayer#constructor constructor of NestedLayer}\n   * @return {NestedLayer}           A NestedLayer owned by this hierarchy\n   */\n  makeLayer(layerData) {\n    const l = new NestedLayer(layerData);\n    l.owner = this;\n    return l;\n  }\n\n  /**\n   * Take ownership of a layer\n   * @param  {NestedLayer} layer The layer to become the owner of\n   */\n  ownLayer(layer) {\n    layer.owner = this;\n  }\n\n  /**\n   * Take ownership of a layer subtree AND those layers' children\n   * @param  {NestedLayer[]} layers The layers to become the owner of\n   */\n  ownAllLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      this.ownLayer(layers[i]);\n      layers[i].ownChildren();\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 59,
    "kind": "class",
    "name": "LayerHierarchy",
    "memberof": "src/Leaflet.LayerHierarchy.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.js",
    "importStyle": "LayerHierarchy",
    "description": "Represents a non-rooted tree structure of NestedLayer objects",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the tree\nshould behave"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 60,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#constructor",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.layers",
        "description": "Layers to include at the root\nlevel"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorVisibility",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.propogateDeselectToChildren",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorMutability",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      }
    ]
  },
  {
    "__docId__": 61,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#_options",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"layers\": *, \"followAncestorVisibility\": boolean, \"propogateDeselectToChildren\": *, \"followAncestorMutability\": boolean}"
      ]
    }
  },
  {
    "__docId__": 62,
    "kind": "member",
    "name": "_layers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#_layers",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 63,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "addLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#addLayer",
    "access": null,
    "description": "Adds a new layer into the tree. Defaults to insertion at the root of the\ntree, but passing a the ID of another layer will insert the layer as a\nchild of that parent.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to insert"
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "parentID",
        "description": "The ID of a parent to insert underneath"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "getLayerByID",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#getLayerByID",
    "access": null,
    "description": "Finds a layer in the tree by ID. Traverses the tree recurisvely until it\nis found. Don't pass children unless you want to search a specific\nsubtree.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The layer ID to search for"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.layers",
        "defaultRaw": "this.layers",
        "name": "children",
        "description": "A subtree to search"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "NestedLayer"
      ],
      "spread": false,
      "description": "The layer if found, or null otherwise."
    }
  },
  {
    "__docId__": 66,
    "kind": "get",
    "name": "layers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#layers",
    "access": null,
    "description": "Root-level NestedLayer layers",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 67,
    "kind": "get",
    "name": "rootLayers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#rootLayers",
    "access": null,
    "description": "{@link #LayerHierarchy#layers Root-level NestedLayer layers}",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 68,
    "kind": "method",
    "name": "validateEnabledStates",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#validateEnabledStates",
    "access": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "layers",
        "types": [
          "*"
        ]
      },
      {
        "name": "newEnabledValue",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 69,
    "kind": "method",
    "name": "ownsLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownsLayer",
    "access": null,
    "description": "Checks if this LayerHierarchy owns the provided layer",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the layer is owned by this hierarchy; false otherwise"
    }
  },
  {
    "__docId__": 70,
    "kind": "method",
    "name": "makeLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#makeLayer",
    "access": null,
    "description": "Factory method for making a new NestedLayer that is owned by this hierarchy",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "layerData",
        "description": "The same object you would provide to the {@link #NestedLayer#constructor constructor of NestedLayer}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NestedLayer"
      ],
      "spread": false,
      "description": "A NestedLayer owned by this hierarchy"
    }
  },
  {
    "__docId__": 71,
    "kind": "method",
    "name": "ownLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownLayer",
    "access": null,
    "description": "Take ownership of a layer",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to become the owner of"
      }
    ]
  },
  {
    "__docId__": 72,
    "kind": "method",
    "name": "ownAllLayers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownAllLayers",
    "access": null,
    "description": "Take ownership of a layer subtree AND those layers' children",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "layers",
        "description": "The layers to become the owner of"
      }
    ]
  },
  {
    "__docId__": 73,
    "kind": "file",
    "name": "src/Leaflet.NestedLayer.js",
    "content": "/**\n * Wraps a {@link http://leafletjs.com/reference-1.1.0.html#layer Leaflet\n * layer} to allow that layer to be the \"parent\" of other layers by having\n * \"child\" layers\n * @param {object} props The layer data\n */\nexport default class NestedLayer {\n\n  /**\n   *\n   * @param {object} props The layer data\n   * @param {number} props.id The layer's unique ID number\n   * @param {string} props.name The layer's unique name\n   * @param {L.Layer} props.layer A {@link\n   * http://leafletjs.com/reference-1.1.0.html#layer Leaflet layer}\n   * @param {L.Map} props.map {@link\n   * http://leafletjs.com/reference-1.1.0.html#map Leaflet map} to attach to\n   * @param {boolean} [props.enabled=true] Initial enabled state of the layer\n   * @param {boolean} [props.selected=false] Initial selected state of the layer\n   * @param {string} [props.swatch=''] Base64 encoded swatch PNG\n   * @param {NestedLayer[]} [props.children=[]] Child layers\n   * @param {number} [props.minZoom] Minimum zoom level that the layer should be visible\n   * @param {number} [props.maxZoom] Maximum zoom level that the layer should be visible\n   */\n  constructor(props) {\n    // set default props for optional props\n    this._props = { children: [], enabled: true, selected: false, swatch: '' };\n    this._isAttached = false;\n\n    // verify that all required arguments are present\n    if (typeof props.id == 'undefined') {\n      throw new Error('Missing ID when creating NestedLayer');\n    }\n    if (typeof props.name == 'undefined') {\n      throw new Error('Missing name when creating NestedLayer');\n    }\n    if (typeof props.layer == 'undefined') {\n      throw new Error('Missing layer object when creating NestedLayer');\n    }\n    if (typeof props.map == 'undefined') {\n      throw new Error('Missing map object when creating NestedLayer');\n    }\n\n    Object.assign(this._props, props);\n\n    // if this layer is starting off selected, attach to the map\n    // calling this.select() ensures that we follow any other attachment rules\n    // built into the 'selected' setter\n    if (this.selected) {\n      this.select();\n    }\n\n    // if the zoom properties are on the leaflet layer object, copy them up to the\n    // NestedLayer object\n    if (this.layer.minZoom !== undefined && this.layer.maxZoom !== undefined) {\n      this._props.minZoom = this.layer.minZoom;\n      this._props.maxZoom = this.layer.maxZoom;\n    }\n\n    // if this layer has zoom data, we need to handle the case where the user zooms to a level where\n    // our layer should be disabled according to the minZoom/maxZoom contained in the layer object\n    if (this.minZoom !== undefined && this.maxZoom !== undefined) {\n      this.map.on('zoomend', this._handleMapZoom);\n    }\n  }\n\n  /**\n   * Layer ID\n   * @type {number}\n   */\n  get id() {\n    return this._props.id;\n  }\n\n  /**\n   * Layer name\n   * @type {string}\n   */\n  get name() {\n    return this._props.name;\n  }\n\n  /**\n   * Underlying Leaflet layer\n   * @type {L.Layer}\n   */\n  get layer() {\n    return this._props.layer;\n  }\n\n  /**\n   * Leaflet Map to attach to\n   * @type {L.Map}\n   */\n  get map() {\n    return this._props.map;\n  }\n\n  /**\n   * Base64 encoded swatch PNG\n   * @type {string}\n   */\n  get swatch() {\n    return this._props.swatch;\n  }\n\n  /**\n   * Child layers\n   * @type {NestedLayer[]}\n   */\n  get children() {\n    return this._props.children;\n  }\n\n  /**\n   * Minimum zoom level for this layer to be visible\n   * @type {number}\n   */\n  get minZoom() {\n    return this._props.minZoom;\n  }\n\n  /**\n   * Maximum zoom level for this layer to be visible\n   * @type {number}\n   */\n  get maxZoom() {\n    return this._props.maxZoom;\n  }\n\n  // enabled = user may freely toggle this layer on and off\n  // disabled = user may not toggle the layer\n  // disabling always deselects the layer, but the selected state is persisted, so that if\n  // the layer is re-enabled, the selected state is what it was prior to disabling\n  // i.e. if disabled, always deselected\n  // this logic is handled in the .selected getter\n\n  /**\n   * Whether the user may freely toggle this layer on and off\n   * @type {boolean}\n   */\n  get enabled() {\n    return this._props.enabled;\n  }\n  set enabled(val) {\n    this._props.enabled = val;\n\n    // if disabling, detach from map\n    if (!val) {\n      this._detach();\n\n    // if enabling, and marked selected (i.e. \"re-enabling\"), attach to map\n    } else if (this._props.selected) {\n      this._attach();\n    }\n  }\n  /**\n   * The inverse of #enabled\n   * @type {boolean}\n   */\n  get disabled() {\n    return !this.enabled;\n  }\n\n  /** Enable the layer */\n  enable() {\n    this.enabled = true;\n  }\n  /** Disable the layer */\n  disable() {\n    this.enabled = false;\n  }\n  /** Toggle the layer's enabled state */\n  toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n\n  // selected = layer present on the map\n  // deselected = layer not present on the map\n  get selected() {\n    if (this.disabled) {\n      return false;\n    } else {\n      return this._props.selected;\n    }\n  }\n  set selected(val) {\n    this._props.selected = val;\n\n    // attach/detach from map when needed\n    // disable children from selection when unselected\n    if (this.selected) {\n      this._attach();\n      this.enableChildren();\n    } else {\n      this._detach();\n      this.disableChildren();\n    }\n  }\n  get deselected() {\n    return !this.selected;\n  }\n  select() {\n    this.selected = true;\n  }\n  deselect() {\n    this.selected = false;\n  }\n  toggleSelected() {\n    this.selected = !this.selected;\n  }\n\n  // this is used to track what programmatic object owns this NestedLayer\n  get owner() {\n    return this._owner;\n  }\n  set owner(val) {\n    this._owner = val;\n  }\n  // checks ownership\n  isOwnedBy(owner) {\n    return this.owner === owner;\n  }\n\n  // options come from the layers owner\n  // will return null if there is no owner\n  get options() {\n    if (typeof this.owner === 'undefined') {\n      return null;\n    } else {\n      return this.owner.options;\n    }\n  }\n\n  // true if the layer has children\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n\n  // add a child NestedLayer object\n  addChild(child) {\n    if (!(child instanceof NestedLayer)) {\n      throw new TypeError('child is not a NestedLayer');\n    }\n    this._props.children.push(child);\n  }\n\n  enableChildren() {\n    this._applyStateChangeToAllChildren('enabled', true, this.children);\n  }\n\n  disableChildren() {\n    this._applyStateChangeToAllChildren('enabled', false, this.children);\n  }\n\n  ownChildren() {\n    this._applyStateChangeToAllChildren('owner', this.owner, this.children);\n  }\n\n  _applyStateChangeToAllChildren(prop, val, children) {\n    // utility to recursively loop through children (and their children, etc.)\n    // to change their state\n    // IDEA: convert to a \"deep map\" function\n    for (let i = 0; i < children.length; i++) {\n      // make the state change\n      children[i][prop] = val;\n\n      // loop through children/subtrees when necessary\n      if (children[i].hasChildren) {\n        this._applyStateChangeToAllChildren(prop, val, children[i].children);\n      }\n    }\n  }\n\n  _handleMapZoom = () => {\n    const zoom = this.map.getZoom();\n\n    if (zoom < this.minZoom || zoom > this.maxZoom) {\n      this._detach();\n    } else {\n      this._attach()\n    }\n  }\n\n  // display on map\n  _attach() {\n    if (!this._isAttached) {\n      // console.log(this.layer);\n      this.map.addLayer(this.layer);\n      // this.layer.addTo(this.map);\n      this._isAttached = true;\n    }\n  }\n\n  // remove from map\n  _detach() {\n    if (this._isAttached) {\n      this.map.removeLayer(this.layer);\n      // this.layer.removeFrom(this.map);\n      this._isAttached = false;\n    }\n  }\n}\n\n\n",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 74,
    "kind": "class",
    "name": "NestedLayer",
    "memberof": "src/Leaflet.NestedLayer.js",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayer.js",
    "importStyle": "NestedLayer",
    "description": "Wraps a {@link http://leafletjs.com/reference-1.1.0.html#layer Leaflet\nlayer} to allow that layer to be the \"parent\" of other layers by having\n\"child\" layers",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The layer data"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 75,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#constructor",
    "access": null,
    "description": "",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The layer data"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "props.id",
        "description": "The layer's unique ID number"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "props.name",
        "description": "The layer's unique name"
      },
      {
        "nullable": null,
        "types": [
          "L.Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.layer",
        "description": "A {@link\nhttp://leafletjs.com/reference-1.1.0.html#layer Leaflet layer}"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "props.map",
        "description": "{@link\nhttp://leafletjs.com/reference-1.1.0.html#map Leaflet map} to attach to"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "props.enabled",
        "description": "Initial enabled state of the layer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "props.selected",
        "description": "Initial selected state of the layer"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "''",
        "defaultRaw": "''",
        "name": "props.swatch",
        "description": "Base64 encoded swatch PNG"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "props.children",
        "description": "Child layers"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.minZoom",
        "description": "Minimum zoom level that the layer should be visible"
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "props.maxZoom",
        "description": "Maximum zoom level that the layer should be visible"
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_props",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_props",
    "access": null,
    "description": null,
    "lineNumber": 27,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"children\": *, \"enabled\": boolean, \"selected\": *, \"swatch\": *}"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 28,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "get",
    "name": "id",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#id",
    "access": null,
    "description": "Layer ID",
    "lineNumber": 71,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 79,
    "kind": "get",
    "name": "name",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#name",
    "access": null,
    "description": "Layer name",
    "lineNumber": 79,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "layer",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#layer",
    "access": null,
    "description": "Underlying Leaflet layer",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "L.Layer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "get",
    "name": "map",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#map",
    "access": null,
    "description": "Leaflet Map to attach to",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "L.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 82,
    "kind": "get",
    "name": "swatch",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#swatch",
    "access": null,
    "description": "Base64 encoded swatch PNG",
    "lineNumber": 103,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 83,
    "kind": "get",
    "name": "children",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#children",
    "access": null,
    "description": "Child layers",
    "lineNumber": 111,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 84,
    "kind": "get",
    "name": "minZoom",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#minZoom",
    "access": null,
    "description": "Minimum zoom level for this layer to be visible",
    "lineNumber": 119,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 85,
    "kind": "get",
    "name": "maxZoom",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#maxZoom",
    "access": null,
    "description": "Maximum zoom level for this layer to be visible",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 86,
    "kind": "get",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": "Whether the user may freely toggle this layer on and off",
    "lineNumber": 142,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 87,
    "kind": "set",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 145,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 88,
    "kind": "get",
    "name": "disabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#disabled",
    "access": null,
    "description": "The inverse of #enabled",
    "lineNumber": 161,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "enable",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enable",
    "access": null,
    "description": "Enable the layer",
    "lineNumber": 166,
    "params": []
  },
  {
    "__docId__": 90,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 167,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "disable",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#disable",
    "access": null,
    "description": "Disable the layer",
    "lineNumber": 170,
    "params": []
  },
  {
    "__docId__": 92,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "toggleEnabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#toggleEnabled",
    "access": null,
    "description": "Toggle the layer's enabled state",
    "lineNumber": 174,
    "params": []
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 175,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "get",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 180,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "set",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 187,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 97,
    "kind": "get",
    "name": "deselected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#deselected",
    "access": null,
    "description": null,
    "lineNumber": 200,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "select",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#select",
    "access": null,
    "description": null,
    "lineNumber": 203,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 99,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 204,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "deselect",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#deselect",
    "access": null,
    "description": null,
    "lineNumber": 206,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 101,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 207,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "toggleSelected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#toggleSelected",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 103,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 210,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "get",
    "name": "owner",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#owner",
    "access": null,
    "description": null,
    "lineNumber": 214,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 105,
    "kind": "set",
    "name": "owner",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#owner",
    "access": null,
    "description": null,
    "lineNumber": 217,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 106,
    "kind": "member",
    "name": "_owner",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_owner",
    "access": null,
    "description": null,
    "lineNumber": 218,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "isOwnedBy",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#isOwnedBy",
    "access": null,
    "description": null,
    "lineNumber": 221,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "owner",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 108,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#options",
    "access": null,
    "description": null,
    "lineNumber": 227,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 109,
    "kind": "get",
    "name": "hasChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#hasChildren",
    "access": null,
    "description": null,
    "lineNumber": 236,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "addChild",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#addChild",
    "access": null,
    "description": null,
    "lineNumber": 241,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "enableChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enableChildren",
    "access": null,
    "description": null,
    "lineNumber": 248,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "disableChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#disableChildren",
    "access": null,
    "description": null,
    "lineNumber": 252,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "ownChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#ownChildren",
    "access": null,
    "description": null,
    "lineNumber": 256,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "_applyStateChangeToAllChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_applyStateChangeToAllChildren",
    "access": null,
    "description": null,
    "lineNumber": 260,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "prop",
        "types": [
          "*"
        ]
      },
      {
        "name": "val",
        "types": [
          "*"
        ]
      },
      {
        "name": "children",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 115,
    "kind": "member",
    "name": "_handleMapZoom",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_handleMapZoom",
    "access": null,
    "description": null,
    "lineNumber": 275,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_attach",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_attach",
    "access": null,
    "description": null,
    "lineNumber": 286,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 291,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "_detach",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_detach",
    "access": null,
    "description": null,
    "lineNumber": 296,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 119,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 300,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 120,
    "kind": "file",
    "name": "src/index.js",
    "content": "import L from 'leaflet-headless';\nimport NestedLayer from './Leaflet.NestedLayer';\nimport LayerHierarchy from './Leaflet.LayerHierarchy';\nimport MapServerParser from './Leaflet.LayerHierarchy.MapServerParser';\nimport NestedLayers from './Leaflet.Control.NestedLayers';\n\nlet exports = {\n  NestedLayer,\n  LayerHierarchy,\n  MapServerParser,\n  NestedLayers\n}\n\nif (typeof window !== 'undefined' && typeof L !== 'undefined') {\n  L.NestedLayer = exports.NestedLayer;\n  L.LayerHierarchy = exports.LayerHierarchy;\n  L.MapServerParser = exports.MapServerParser;\n  L.Control.NestedLayers = exports.NestedLayers;\n\n  L.nestedLayer = function nestedLayer(options) {\n    return new exports.NestedLayer(options);\n  };\n  L.layerHierarchy = function layerHierarchy(options) {\n    return new exports.LayerHierarchy(options);\n  };\n  L.mapServerParser = function mapServerParser(url, map, options) {\n    return new exports.MapServerParser(url, map, options);\n  };\n  L.control.nestedLayers = function nestedLayers(hierarchy, element, options) {\n    return new exports.NestedLayers(hierarchy, element, options);\n  };\n}\n\nmodule.exports = exports;\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 121,
    "kind": "variable",
    "name": "exports",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~exports",
    "access": null,
    "export": false,
    "importPath": "leaflet.control.nestedlayers/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"NestedLayer\": *, \"LayerHierarchy\": *, \"MapServerParser\": *, \"NestedLayers\": *}"
      ]
    }
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 125,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 135,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 136,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 137,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 138,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 139,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 140,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 141,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 142,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 143,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 144,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 145,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 146,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 147,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 148,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 149,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 150,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 151,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 152,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 153,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 154,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 155,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 156,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 157,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 158,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 159,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 160,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 161,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 162,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 163,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 164,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 165,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 167,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 173,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 174,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 175,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 176,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 177,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 178,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 179,
    "kind": "testFile",
    "name": "test/Leaflet.Control.NestedLayers.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport NestedLayers from './../src/Leaflet.Control.NestedLayers';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport jsdom from 'jsdom';\n\ndescribe( 'NestedLayers', () => {\n\n  let control, h, el;\n  const { JSDOM } = jsdom;\n\n  beforeEach(() => {\n    h = new LayerHierarchy();\n    el = JSDOM.fragment('<div id=\"test-element\"></div>');\n    control = new NestedLayers(h, el);\n  });\n\n  afterEach(() => {\n    control.detach();\n  });\n\n  it('should have required arguments on construction', () => {\n    expect(() => {\n      let invalidControl = new NestedLayers(undefined, undefined);\n    }).to.throw();\n    expect(() => {\n      let invalidControl = new NestedLayers(undefined, el);\n    }).to.throw('hierarchy');\n    expect(() => {\n      let invalidControl = new NestedLayers(h, undefined);\n    }).to.throw('element');\n  });\n\n  it('should have default (configuration) options', () => {\n    // expect(control.options).to.be.an('object').that.is.not.empty;\n    expect(control.options).to.have.all.keys([\n      'followAncestorVisibility',\n      'followAncestorMutability',\n      'propogateDeselectToChildren'\n    ]);\n  });\n\n\n\n  // it('should have better tests written', () => {\n  //   let betterTestsWritten = false;\n  //   expect(betterTestsWritten).to.be.true;\n  // });\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 180,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe0",
    "access": null,
    "description": "NestedLayers",
    "lineNumber": 7
  },
  {
    "__docId__": 181,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe0.it1",
    "access": null,
    "description": "should have required arguments on construction",
    "lineNumber": 22
  },
  {
    "__docId__": 182,
    "kind": "testIt",
    "name": "it2",
    "testId": 2,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe0.it2",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 34
  },
  {
    "__docId__": 183,
    "kind": "testFile",
    "name": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\n// this package must be imported before MapServerParser\n// MapServerParser imports esri-leaflet, which imports Leaflet, which throws errors when\n// run in a headless environment\nimport 'leaflet-headless';\n\nimport MapServerParser from './../src/Leaflet.LayerHierarchy.MapServerParser';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport Promise from 'bluebird';\nimport { Map } from 'leaflet-headless';\n\n// import chalk from 'chalk';\nimport sinon from 'sinon';\n\ndescribe( 'MapServerParser', () => {\n\n  let url, map, options, parser;\n  before( () => {\n    // setup fixture data\n    url = 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer';\n    // stubbing Leaflet's Map prevents us from actually calling the Map constructor, which would require\n    // a HTMLElement to use; getting JSDOM to work with Map is more trouble that it's worth\n    // however, checks like `map instanceof Map` still pass with the stub\n    map = sinon.createStubInstance(Map);\n    options = {\n      data: {\n        scale: false,\n        defaultVisibility: false,\n        swatch: true\n      },\n      hierarchyOptions: {\n        followAncestorVisibility: false,\n        propogateDeselectToChildren: true,\n        followAncestorMutability: false\n      }\n    };\n    parser = new MapServerParser(url, map, options);\n  } );\n\n  describe('#url', () => {\n    it('should be able to get the MapServer url', () => {\n      expect(parser.url).to.be.a('string').that.has.string(url);\n    });\n  })\n\n  describe('#map', () => {\n    it('should be able to get the Leaflet map object', () => {\n      expect(parser.map).to.be.an.instanceof(Map).and.to.equal(map);\n    });\n  })\n\n  describe('#options', () => {\n    it('should be able to get configuration options', () => {\n      expect(parser.options).to.be.an('object').that.has.all.deep.keys(options);\n    })\n  })\n\n  describe('#defaults', () => {\n    it('should have default configuration options accessible always', () => {\n      expect(parser.defaults).to.be.an('object').that.has.all.deep.keys(options);\n    })\n  })\n\n  describe('#constructor', () => {\n    it('should throw errors if required arguments are missing', () => {\n      expect(() => {\n        let p = new MapServerParser();\n      }).to.throw();\n      expect(() => {\n        let p = new MapServerParser(undefined, map, options);\n      }).to.throw('URL');\n      expect(() => {\n        let p = new MapServerParser(url, undefined, options);\n      }).to.throw('map');\n    });\n\n    it('should have default (configuration) options', () => {\n      // create a new parser without any options passed\n      // so we can assert that it uses default options of some sort\n      let p = new MapServerParser(url, map);\n      expect(p.options).to.be.an('object').that.has.all.deep.keys(options)\n    });\n\n    it('should merge options with defaults', () => {\n      const o = { data: { scale: false } };\n      let p = new MapServerParser(url, map, o);\n      expect(p.options).to.be.an('object').that.has.all.deep.keys(options);\n      expect(p.options.data.scale).to.be.false;\n      expect(p.options.data.defaultVisibility).to.exist.and.to.equal(p.defaults.data.defaultVisibility);\n    });\n  })\n\n  describe('#parse', () => {\n\n    let promise;\n    before(() => {\n      promise = parser.parse();\n    });\n\n    it('should return a promise', () => {\n      expect(promise).to.be.an.instanceof(Promise);\n    });\n\n    it('should resolve the promise', () => {\n      return expect(promise).to.be.fulfilled;\n    });\n\n    it.skip('should resolve the promise with a LayerHierarchy', () => {\n      return expect(promise).to.eventually.be.an.instanceof(LayerHierarchy);\n    });\n  })\n\n  describe('#_queryLayers', () => {\n    it('should return a promise', () => {\n      expect(parser._queryLayers()).to.be.an.instanceof(Promise);\n    });\n  })\n\n  describe('#_queryLegend', () => {\n    it('should return a promise', () => {\n      expect(parser._queryLayers()).to.be.an.instanceof(Promise);\n    });\n  })\n\n  describe('._makeLayerURL', () => {\n    it('should require valid parameters', () => {\n      expect(function noParams() {\n        MapServerParser._makeLayerURL()\n      }).to.throw();\n      expect(function missingURL() {\n        MapServerParser._makeLayerURL(undefined, 0)\n      }).to.throw('URL');\n      expect(function invalidURLType() {\n        MapServerParser._makeLayerURL({}, 0)\n      }).to.throw('URL');\n      expect(function missingID() {\n        MapServerParser._makeLayerURL('foo', undefined);\n      }).to.throw('ID');\n      expect(function invalidIDType() {\n        MapServerParser._makeLayerURL('foo', {});\n      }).to.throw('ID');\n    });\n\n    it('should make valid URLs', () => {\n      const fixture1 = {\n        base: 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer',\n        id: 0,\n        result: 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer/0'\n      };\n      const fixture2 = {\n        base: 'MapServer',\n        id: 42,\n        result: 'MapServer/42'\n      }\n\n      expect(MapServerParser._makeLayerURL(fixture1.base, fixture1.id)).to.equal(fixture1.result);\n      expect(MapServerParser._makeLayerURL(fixture2.base, fixture2.id)).to.equal(fixture2.result);\n    });\n  })\n\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 184,
    "kind": "testDescribe",
    "name": "describe3",
    "testId": 3,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "access": null,
    "description": "MapServerParser",
    "lineNumber": 16
  },
  {
    "__docId__": 185,
    "kind": "testDescribe",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe4",
    "access": null,
    "description": "#url",
    "lineNumber": 41
  },
  {
    "__docId__": 186,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe4",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe4.it5",
    "access": null,
    "description": "should be able to get the MapServer url",
    "lineNumber": 42
  },
  {
    "__docId__": 187,
    "kind": "testDescribe",
    "name": "describe6",
    "testId": 6,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe6",
    "access": null,
    "description": "#map",
    "lineNumber": 47
  },
  {
    "__docId__": 188,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe6",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe6.it7",
    "access": null,
    "description": "should be able to get the Leaflet map object",
    "lineNumber": 48
  },
  {
    "__docId__": 189,
    "kind": "testDescribe",
    "name": "describe8",
    "testId": 8,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe8",
    "access": null,
    "description": "#options",
    "lineNumber": 53
  },
  {
    "__docId__": 190,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe8",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe8.it9",
    "access": null,
    "description": "should be able to get configuration options",
    "lineNumber": 54
  },
  {
    "__docId__": 191,
    "kind": "testDescribe",
    "name": "describe10",
    "testId": 10,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe10",
    "access": null,
    "description": "#defaults",
    "lineNumber": 59
  },
  {
    "__docId__": 192,
    "kind": "testIt",
    "name": "it11",
    "testId": 11,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe10",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe10.it11",
    "access": null,
    "description": "should have default configuration options accessible always",
    "lineNumber": 60
  },
  {
    "__docId__": 193,
    "kind": "testDescribe",
    "name": "describe12",
    "testId": 12,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12",
    "access": null,
    "description": "#constructor",
    "lineNumber": 65
  },
  {
    "__docId__": 194,
    "kind": "testIt",
    "name": "it13",
    "testId": 13,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12.it13",
    "access": null,
    "description": "should throw errors if required arguments are missing",
    "lineNumber": 66
  },
  {
    "__docId__": 195,
    "kind": "testIt",
    "name": "it14",
    "testId": 14,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12.it14",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 78
  },
  {
    "__docId__": 196,
    "kind": "testIt",
    "name": "it15",
    "testId": 15,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe12.it15",
    "access": null,
    "description": "should merge options with defaults",
    "lineNumber": 85
  },
  {
    "__docId__": 197,
    "kind": "testDescribe",
    "name": "describe16",
    "testId": 16,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe16",
    "access": null,
    "description": "#parse",
    "lineNumber": 94
  },
  {
    "__docId__": 198,
    "kind": "testIt",
    "name": "it17",
    "testId": 17,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe16.it17",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 101
  },
  {
    "__docId__": 199,
    "kind": "testIt",
    "name": "it18",
    "testId": 18,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe16",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe16.it18",
    "access": null,
    "description": "should resolve the promise",
    "lineNumber": 105
  },
  {
    "__docId__": 200,
    "kind": "testDescribe",
    "name": "describe19",
    "testId": 19,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe19",
    "access": null,
    "description": "#_queryLayers",
    "lineNumber": 114
  },
  {
    "__docId__": 201,
    "kind": "testIt",
    "name": "it20",
    "testId": 20,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe19",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe19.it20",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 115
  },
  {
    "__docId__": 202,
    "kind": "testDescribe",
    "name": "describe21",
    "testId": 21,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe21",
    "access": null,
    "description": "#_queryLegend",
    "lineNumber": 120
  },
  {
    "__docId__": 203,
    "kind": "testIt",
    "name": "it22",
    "testId": 22,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe21.it22",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 121
  },
  {
    "__docId__": 204,
    "kind": "testDescribe",
    "name": "describe23",
    "testId": 23,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe23",
    "access": null,
    "description": "._makeLayerURL",
    "lineNumber": 126
  },
  {
    "__docId__": 205,
    "kind": "testIt",
    "name": "it24",
    "testId": 24,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe23.it24",
    "access": null,
    "description": "should require valid parameters",
    "lineNumber": 127
  },
  {
    "__docId__": 206,
    "kind": "testIt",
    "name": "it25",
    "testId": 25,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe23",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3.describe23.it25",
    "access": null,
    "description": "should make valid URLs",
    "lineNumber": 145
  },
  {
    "__docId__": 207,
    "kind": "testFile",
    "name": "test/Leaflet.LayerHierarchy.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport NestedLayer from './../src/Leaflet.NestedLayer';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\ndescribe( 'LayerHierarchy', () => {\n\n  function stubLayer(id) {\n    return {\n      id,\n      addTo: function() {},\n      removeFrom: function() {},\n      remove: function() {},\n      on: function() {}\n    }\n  }\n\n  let h, layers, l, layerData, ownedLayer,\n      l0,     l1,     l2,     l3,     l4,\n      layer0, layer1, layer2, layer3, layer4;\n  beforeEach( () => {\n    layerData = {\n      id: 999,\n      name: 'Layer 999',\n      layer: stubLayer(999),\n      map: {}\n    };\n    l = new NestedLayer(layerData);\n\n    l2 = {\n      id: 2,\n      name: 'Layer 2',\n      layer: stubLayer(2),\n      map: {},\n      children: []\n    };\n    l3 = {\n      id: 3,\n      name: 'Layer 3',\n      layer: stubLayer(3),\n      map: {},\n      children: []\n    }\n    layer2 = new NestedLayer(l2);\n    layer3 = new NestedLayer(l3);\n\n    l1 = {\n      id: 1,\n      name: 'Layer 1',\n      layer: stubLayer(1),\n      map: {},\n      children: [layer2, layer3]\n    }\n    layer1 = new NestedLayer(l1);\n\n    l0 = {\n      id: 0,\n      name: 'Layer 0',\n      layer: stubLayer(0),\n      map: {},\n      children: [layer1]\n    }\n    layer0 = new NestedLayer(l0);\n\n    l4 = {\n      id: 4,\n      name: 'Layer 4',\n      layer: stubLayer(4),\n      map: {},\n      children: []\n    }\n    layer4 = new NestedLayer(l4);\n\n    layers = [layer0, layer4];\n    h = new LayerHierarchy({layers});\n\n    ownedLayer = h.makeLayer(layerData);\n  } );\n\n  it('should have default (configuration) options', () => {\n    // expect(control.options).to.be.an('object').that.is.not.empty;\n    expect(h.options).to.have.all.keys([\n      'followAncestorVisibility',\n      'followAncestorMutability',\n      'propogateDeselectToChildren'\n    ]);\n  });\n\n  it('should be able to make layers with a factory method', () => {\n    expect(ownedLayer).to.be.an.instanceOf(NestedLayer);\n  });\n\n  it('should be able own layers', () => {\n    expect(ownedLayer.owner).to.equal(h);\n    expect(ownedLayer.isOwnedBy(h)).to.be.true;\n\n    const nonOwner = {};\n    expect(ownedLayer.owner).to.not.equal(nonOwner);\n    expect(ownedLayer.isOwnedBy(nonOwner)).to.be.false;\n  });\n\n  it('should be able to check if it owns a layer', () => {\n    expect(h.ownsLayer(ownedLayer)).to.be.true;\n\n    const nonOwner = new LayerHierarchy();\n    expect(nonOwner.ownsLayer(ownedLayer)).to.be.false;\n  });\n\n  it('should be able to get layers by id', () => {\n    expect(h.getLayerByID(0), 'hierarchy getLayerByID').to.equal(layer0);\n    expect(h.getLayerByID(1), 'hierarchy getLayerByID').to.equal(layer1);\n    expect(h.getLayerByID(2), 'hierarchy getLayerByID').to.equal(layer2);\n    expect(h.getLayerByID(3), 'hierarchy getLayerByID').to.equal(layer3);\n    expect(h.getLayerByID(4), 'hierarchy getLayerByID').to.equal(layer4);\n  });\n\n  it('should not be able to add non-NestedLayer layers', () => {\n    const badLayer = {};\n    expect(() => {\n      h.addLayer(badLayer);\n    }).to.throw(TypeError, 'NestedLayer');\n  });\n\n  it('should be able to add layers at the root level', () => {\n    expect(() => {\n      h.addLayer(l);\n    }).to.not.throw();\n\n    expect(h.getLayerByID(l.id)).to.equal(l);\n    expect(h._layers).to.include(l);\n  });\n\n  it('should be able to add layers below the root level to other layers', () => {\n    expect(() => {\n      h.addLayer(l, layer0.id)\n    }).to.not.throw();\n\n    expect(h.getLayerByID(l.id)).to.equal(l);\n    expect(layer0.children).to.include(l);\n  });\n\n  it('should ensure that layers it adds at the root level are owned by it', () => {\n    h.addLayer(l);\n    expect(l.isOwnedBy(h)).to.be.true;\n  });\n\n  it('should ensure that layers it adds below the root level are owned by it', () => {\n    h.addLayer(l, layer0.id)\n    expect(l.isOwnedBy(h)).to.be.true;\n  });\n\n  it('should own all layers it was created with', () => {\n    expect(layer0.isOwnedBy(h)).to.be.true;\n    // expect(layer1.isOwnedBy(h)).to.be.true;\n    // expect(layer2.isOwnedBy(h)).to.be.true;\n    // expect(layer3.isOwnedBy(h)).to.be.true;\n    // expect(layer4.isOwnedBy(h)).to.be.true;\n  })\n\n  it('should have valid enabled states upon creation', () => {\n    // use a customized subset of the fixtures for this test\n    // layers 1 and 2 are enabled and children of layer 0, which is disabled\n    // layer 3 is enabled and a child of layer 2\n    // layer 4 is disabled and a child of layer 2\n    // at the start of the test\n    l3.enabled = true;\n    layer3 = new NestedLayer(l3);\n    l4.enabled = false;\n    layer4 = new NestedLayer(l4);\n    l1.children = [];\n    l2.children = [layer3, layer4];\n    l1.enabled = l2.enabled = true;\n    layer1 = new NestedLayer(l1);\n    layer2 = new NestedLayer(l2);\n    l0.children = [layer1, layer2];\n    l0.enabled = false;\n    layer0 = new NestedLayer(l0);\n    layers = [layer0];\n    let hierarchy = new LayerHierarchy({layers});\n\n    // the constructor should have validated the enabled state of all the layers\n    // layers 1 and 2 shoud now be disabled\n\n    expect(layer1.disabled).to.be.true;\n    expect(layer2.disabled).to.be.true;\n    expect(layer3.disabled).to.be.true;\n    expect(layer4.disabled).to.be.true;\n  });\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 208,
    "kind": "testDescribe",
    "name": "describe26",
    "testId": 26,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "access": null,
    "description": "LayerHierarchy",
    "lineNumber": 5
  },
  {
    "__docId__": 209,
    "kind": "testIt",
    "name": "it27",
    "testId": 27,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it27",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 79
  },
  {
    "__docId__": 210,
    "kind": "testIt",
    "name": "it28",
    "testId": 28,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it28",
    "access": null,
    "description": "should be able to make layers with a factory method",
    "lineNumber": 88
  },
  {
    "__docId__": 211,
    "kind": "testIt",
    "name": "it29",
    "testId": 29,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it29",
    "access": null,
    "description": "should be able own layers",
    "lineNumber": 92
  },
  {
    "__docId__": 212,
    "kind": "testIt",
    "name": "it30",
    "testId": 30,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it30",
    "access": null,
    "description": "should be able to check if it owns a layer",
    "lineNumber": 101
  },
  {
    "__docId__": 213,
    "kind": "testIt",
    "name": "it31",
    "testId": 31,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it31",
    "access": null,
    "description": "should be able to get layers by id",
    "lineNumber": 108
  },
  {
    "__docId__": 214,
    "kind": "testIt",
    "name": "it32",
    "testId": 32,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it32",
    "access": null,
    "description": "should not be able to add non-NestedLayer layers",
    "lineNumber": 116
  },
  {
    "__docId__": 215,
    "kind": "testIt",
    "name": "it33",
    "testId": 33,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it33",
    "access": null,
    "description": "should be able to add layers at the root level",
    "lineNumber": 123
  },
  {
    "__docId__": 216,
    "kind": "testIt",
    "name": "it34",
    "testId": 34,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it34",
    "access": null,
    "description": "should be able to add layers below the root level to other layers",
    "lineNumber": 132
  },
  {
    "__docId__": 217,
    "kind": "testIt",
    "name": "it35",
    "testId": 35,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it35",
    "access": null,
    "description": "should ensure that layers it adds at the root level are owned by it",
    "lineNumber": 141
  },
  {
    "__docId__": 218,
    "kind": "testIt",
    "name": "it36",
    "testId": 36,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it36",
    "access": null,
    "description": "should ensure that layers it adds below the root level are owned by it",
    "lineNumber": 146
  },
  {
    "__docId__": 219,
    "kind": "testIt",
    "name": "it37",
    "testId": 37,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it37",
    "access": null,
    "description": "should own all layers it was created with",
    "lineNumber": 151
  },
  {
    "__docId__": 220,
    "kind": "testIt",
    "name": "it38",
    "testId": 38,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js~describe26",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~describe26.it38",
    "access": null,
    "description": "should have valid enabled states upon creation",
    "lineNumber": 159
  },
  {
    "__docId__": 221,
    "kind": "testFile",
    "name": "test/Leaflet.NestedLayer.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport NestedLayer from './../src/Leaflet.NestedLayer';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport L from 'leaflet-headless';\nimport sinon from 'sinon';\n\ndescribe( 'NestedLayer', () => {\n\n  function stubLayer(id, options) {\n    if (typeof options === 'undefined') {\n      options = {};\n    }\n    return {\n      id,\n      addTo: function() {},\n      removeFrom: function() {},\n      remove: function() {},\n      on: function() {},\n      minZoom: options.minZoom,\n      maxZoom: options.maxZoom\n    }\n  }\n\n  // layer1 and layer2 are both children of layer0\n  // l is for testing other non-nested layer features\n  let l, l0, l1, l2, layer0, layer1, layer2,\n      layerAddSpy, layerRemoveSpy;\n\n  beforeEach(() => {\n    l = new NestedLayer({\n      id: 999,\n      name: 'Layer 999',\n      layer: stubLayer(999),\n      map: {},\n      enabled: true,\n      selected: false\n    });\n\n    l1 = {\n      id: 1,\n      name: 'Layer 1',\n      layer: stubLayer(1),\n      map: {},\n      children: []\n    };\n    l2 = {\n      id: 2,\n      name: 'Layer 2',\n      layer: stubLayer(2),\n      map: {},\n      children: []\n    }\n    layer1 = new NestedLayer(l1);\n    layer2 = new NestedLayer(l2);\n\n    l0 = {\n      id: 0,\n      name: 'Layer 0',\n      layer: stubLayer(0),\n      map: {},\n      children: [layer1, layer2]\n    }\n    layer0 = new NestedLayer(l0);\n\n    layerAddSpy = sinon.spy(l.layer, 'addTo');\n    layerRemoveSpy = sinon.spy(l.layer, 'removeFrom');\n  });\n\n  afterEach(() => {\n    l._attach.restore;\n    l._detach.restore;\n  });\n\n  it('should accept props on construction', () => {\n    expect(layer1._props).to.have.property('id');\n    expect(layer1._props).to.have.property('name');\n    expect(layer1._props).to.have.property('layer');\n    expect(layer1._props).to.have.property('children');\n  });\n\n  it('should have defaults for optional arguments in the constructor', () => {\n\n\n    // children\n    expect(l._props).to.have.property('children');\n    expect(l.children).to.be.empty;\n\n    // swatch\n    expect(l._props).to.have.property('swatch');\n    expect(l.swatch).to.equal('');\n\n    // enabled + selected\n    expect(l.enabled).to.be.true;\n    expect(l.selected).to.be.false;\n  });\n\n  it('should throw errors when missing required arguments on construction', () => {\n    expect(function() {\n      new NestedLayer({\n        name: 'Layer 999',\n        layer: {id: 999},\n        map: {}\n      });\n    }).to.throw('ID');\n\n    expect(function() {\n      new NestedLayer({\n        id: 999,\n        layer: {id: 999},\n        map: {}\n      });\n    }).to.throw('name');\n\n    expect(function() {\n      new NestedLayer({\n        id: 999,\n        name: 'Layer 999',\n        map: {}\n      });\n    }).to.throw('layer object');\n    expect(function() {\n      new NestedLayer({\n        id: 999,\n        name: 'Layer 999',\n        layer: {id:999},\n      });\n    }).to.throw('map object');\n  });\n\n  it('should have a name', () => {\n    expect(l.name).to.equal('Layer 999');\n  })\n\n  it('should be selectable', () => {\n    l.select();\n    expect(l.selected).to.be.true;\n    expect(l.deselected).to.be.false;\n\n    l.selected = true;\n    expect(l.selected).to.be.true;\n    expect(l.deselected).to.be.false;\n  });\n\n  it('should be deselectable', () => {\n    l.deselect();\n    expect(l.selected).to.be.false;\n    expect(l.deselected).to.be.true;\n\n    l.selected = false;\n    expect(l.selected).to.be.false;\n    expect(l.deselected).to.be.true;\n  })\n\n  it('should permit toggling the selected state', () => {\n    l.selected = false;\n    l.toggleSelected();\n    expect(l.selected).to.be.true;\n    expect(l.deselected).to.be.false;\n  })\n\n  it('should be enableable', () => {\n    l.enable();\n    expect(l.enabled).to.be.true;\n    expect(l.disabled).to.be.false;\n\n    l.enabled = true;\n    expect(l.enabled).to.be.true;\n    expect(l.disabled).to.be.false;\n  });\n\n  it('should be disableable', () => {\n    l.disable();\n    expect(l.enabled).to.be.false;\n    expect(l.disabled).to.be.true;\n\n    l.enabled = false;\n    expect(l.enabled).to.be.false;\n    expect(l.disabled).to.be.true;\n  })\n\n  it('should permit toggling the enabled state', () => {\n    l.enabled = false;\n    l.toggleEnabled();\n    expect(l.enabled).to.be.true;\n    expect(l.disabled).to.be.false;\n  })\n\n  it('should always be deselected if disabled', () => {\n    l.disable();\n    expect(l.selected).to.be.false;\n    expect(l.deselected).to.be.true;\n\n    l.select();\n    expect(l.selected).to.be.false;\n    expect(l.deselected).to.be.true;\n  });\n\n  it('should retain selected state if disabled then re-enabled', () => {\n    l.select();\n    l.disable();\n    expect(l.selected).to.be.false;\n\n    l.enable();\n    expect(l.selected).to.be.true;\n\n    l.deselect();\n    l.disable();\n    expect(l.selected).to.be.false;\n\n    l.enable();\n    expect(l.selected).to.be.false;\n  });\n\n  it('should know who its owner is', () => {\n    expect(l.owner).to.be.undefined;\n\n    const owner = new LayerHierarchy();\n    l.owner = owner;\n    expect(l.owner).to.equal(owner);\n    expect(l.isOwnedBy(owner)).to.be.true;\n\n    const nonOwner = {};\n    expect(l.owner).to.not.equal(nonOwner);\n    expect(l.isOwnedBy(nonOwner)).to.be.false;\n  })\n\n  it('should have access to its owner\\'s configuration properties when owned', () => {\n    // trying to fetch the options of an unowned layer should give null (no options)\n    expect(layer0.options).to.be.null;\n\n    const owner = new LayerHierarchy({ layers: [layer0] });\n    expect(layer0.options).to.have.all.keys([\n      'followAncestorVisibility',\n      'followAncestorMutability',\n      'propogateDeselectToChildren'\n    ]);\n  })\n\n  it('should be able to add valid child layers', () => {\n    expect(layer0.children).to.not.contain(l);\n\n    layer0.addChild(l)\n    expect(layer0.children).to.contain(l);\n\n    // try adding an invalid child layer\n    let notALayer = 42;\n    expect(() => {\n      layer0.addChild(notALayer);\n    }).to.throw(TypeError);\n  });\n\n  it('should know if it has children', () => {\n    expect(layer0.hasChildren).to.be.true;\n    expect(layer1.hasChildren).to.be.false;\n  })\n\n  it('should be able to enable its children', () => {\n    layer2.addChild(l);\n\n    layer1.disable();\n    layer2.disable();\n    l.disable();\n\n    layer0.enableChildren();\n\n    expect(layer1.enabled).to.be.true;\n    expect(layer2.enabled).to.be.true;\n\n    layer1.enable();\n    layer2.enable();\n\n    expect(() => {\n      layer0.enableChildren()\n    }).to.not.throw();\n  })\n\n  it('should be able to disable its children', () => {\n    layer2.addChild(l);\n\n    layer1.enable();\n    layer2.enable();\n    l.enable();\n\n    layer0.disableChildren();\n\n    expect(layer1.disabled).to.be.true;\n    expect(layer2.disabled).to.be.true;\n\n    layer1.disable();\n    layer2.disable();\n\n    expect(() => {\n      layer0.disableChildren()\n    }).to.not.throw();\n  })\n\n  it('should be able to take ownership of all its children', () => {\n    const owner = {};\n    expect(layer0.owner).to.be.undefined;\n    expect(layer1.owner).to.be.undefined;\n    expect(layer2.owner).to.be.undefined;\n\n    layer0.owner = owner;\n    expect(layer0.isOwnedBy(owner)).to.be.true;\n    // child layers are not owned until ownChildren() is called\n    expect(layer1.owner).to.be.undefined;\n    expect(layer2.owner).to.be.undefined;\n\n    layer0.ownChildren();\n    expect(layer0.isOwnedBy(owner)).to.be.true;\n    expect(layer1.isOwnedBy(owner)).to.be.true;\n    expect(layer2.isOwnedBy(owner)).to.be.true;\n  })\n\n  it('should attach to the map when selected', () => {\n    l.select();\n    expect(layerAddSpy).to.have.been.called;\n  });\n\n  it('should not attach to the map if it is already attached', () => {\n    l.select();\n    l.select();\n    expect(layerAddSpy).to.have.been.calledOnce;\n    expect(layerRemoveSpy).to.not.have.been.called;\n  });\n\n  it('should detach from the map when deselected', () => {\n    // start by attaching it through selection\n    l.select();\n    l.deselect();\n    expect(layerRemoveSpy).to.have.been.called;\n  });\n\n  it('should detach from the map when disabled', () => {\n    l.select();\n    l.disable();\n    expect(layerRemoveSpy).to.have.been.called;\n  })\n\n  it('should re-attach to the map after being re-enabled (if selected)', () => {\n    l.select(); // mark layer as \"selected\"\n    l.disable(); // layer should persist selected state even when disabled\n    l.enable(); // layer should remember that it was selected before it was disabled\n    expect(layerAddSpy).to.have.been.calledTwice; // layer should re-attach to the map\n  })\n\n  it('should not detach from the map if it is already detached', () => {\n    l.select();\n    l.deselect();\n    l.deselect();\n    expect(layerRemoveSpy).to.have.been.calledOnce;\n  });\n\n  it('should disable itself if the map is zoomed beyond its zoom boundaries', () => {\n    const minZoom = 5, maxZoom = 15;\n    const map = L.map(document.createElement('div')).setView([52, 4], 10);\n    const layer = new NestedLayer({\n      id: 888,\n      name: 'Layer 888',\n      layer: stubLayer(888, {minZoom, maxZoom}),\n      map,\n      enabled: true,\n      selected: true\n    });\n    expect(layer.minZoom).to.equal(minZoom);\n    expect(layer.maxZoom).to.equal(maxZoom);\n\n    const removeSpy = sinon.spy(layer.layer, 'removeFrom');\n    map.setZoom(4);\n    expect(removeSpy).to.have.been.calledOnce;\n\n    map.setZoom(10); // this ensures the layer is reattached to the map\n    map.setZoom(16);\n    expect(removeSpy).to.have.been.calledTwice;\n  })\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 222,
    "kind": "testDescribe",
    "name": "describe39",
    "testId": 39,
    "memberof": "test/Leaflet.NestedLayer.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39",
    "access": null,
    "description": "NestedLayer",
    "lineNumber": 8
  },
  {
    "__docId__": 223,
    "kind": "testIt",
    "name": "it40",
    "testId": 40,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it40",
    "access": null,
    "description": "should accept props on construction",
    "lineNumber": 75
  },
  {
    "__docId__": 224,
    "kind": "testIt",
    "name": "it41",
    "testId": 41,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it41",
    "access": null,
    "description": "should have defaults for optional arguments in the constructor",
    "lineNumber": 82
  },
  {
    "__docId__": 225,
    "kind": "testIt",
    "name": "it42",
    "testId": 42,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it42",
    "access": null,
    "description": "should throw errors when missing required arguments on construction",
    "lineNumber": 98
  },
  {
    "__docId__": 226,
    "kind": "testIt",
    "name": "it43",
    "testId": 43,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it43",
    "access": null,
    "description": "should have a name",
    "lineNumber": 131
  },
  {
    "__docId__": 227,
    "kind": "testIt",
    "name": "it44",
    "testId": 44,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it44",
    "access": null,
    "description": "should be selectable",
    "lineNumber": 135
  },
  {
    "__docId__": 228,
    "kind": "testIt",
    "name": "it45",
    "testId": 45,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it45",
    "access": null,
    "description": "should be deselectable",
    "lineNumber": 145
  },
  {
    "__docId__": 229,
    "kind": "testIt",
    "name": "it46",
    "testId": 46,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it46",
    "access": null,
    "description": "should permit toggling the selected state",
    "lineNumber": 155
  },
  {
    "__docId__": 230,
    "kind": "testIt",
    "name": "it47",
    "testId": 47,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it47",
    "access": null,
    "description": "should be enableable",
    "lineNumber": 162
  },
  {
    "__docId__": 231,
    "kind": "testIt",
    "name": "it48",
    "testId": 48,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it48",
    "access": null,
    "description": "should be disableable",
    "lineNumber": 172
  },
  {
    "__docId__": 232,
    "kind": "testIt",
    "name": "it49",
    "testId": 49,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it49",
    "access": null,
    "description": "should permit toggling the enabled state",
    "lineNumber": 182
  },
  {
    "__docId__": 233,
    "kind": "testIt",
    "name": "it50",
    "testId": 50,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it50",
    "access": null,
    "description": "should always be deselected if disabled",
    "lineNumber": 189
  },
  {
    "__docId__": 234,
    "kind": "testIt",
    "name": "it51",
    "testId": 51,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it51",
    "access": null,
    "description": "should retain selected state if disabled then re-enabled",
    "lineNumber": 199
  },
  {
    "__docId__": 235,
    "kind": "testIt",
    "name": "it52",
    "testId": 52,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it52",
    "access": null,
    "description": "should know who its owner is",
    "lineNumber": 215
  },
  {
    "__docId__": 236,
    "kind": "testIt",
    "name": "it53",
    "testId": 53,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it53",
    "access": null,
    "description": "should have access to its owner's configuration properties when owned",
    "lineNumber": 228
  },
  {
    "__docId__": 237,
    "kind": "testIt",
    "name": "it54",
    "testId": 54,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it54",
    "access": null,
    "description": "should be able to add valid child layers",
    "lineNumber": 240
  },
  {
    "__docId__": 238,
    "kind": "testIt",
    "name": "it55",
    "testId": 55,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it55",
    "access": null,
    "description": "should know if it has children",
    "lineNumber": 253
  },
  {
    "__docId__": 239,
    "kind": "testIt",
    "name": "it56",
    "testId": 56,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it56",
    "access": null,
    "description": "should be able to enable its children",
    "lineNumber": 258
  },
  {
    "__docId__": 240,
    "kind": "testIt",
    "name": "it57",
    "testId": 57,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it57",
    "access": null,
    "description": "should be able to disable its children",
    "lineNumber": 278
  },
  {
    "__docId__": 241,
    "kind": "testIt",
    "name": "it58",
    "testId": 58,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it58",
    "access": null,
    "description": "should be able to take ownership of all its children",
    "lineNumber": 298
  },
  {
    "__docId__": 242,
    "kind": "testIt",
    "name": "it59",
    "testId": 59,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it59",
    "access": null,
    "description": "should attach to the map when selected",
    "lineNumber": 316
  },
  {
    "__docId__": 243,
    "kind": "testIt",
    "name": "it60",
    "testId": 60,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it60",
    "access": null,
    "description": "should not attach to the map if it is already attached",
    "lineNumber": 321
  },
  {
    "__docId__": 244,
    "kind": "testIt",
    "name": "it61",
    "testId": 61,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it61",
    "access": null,
    "description": "should detach from the map when deselected",
    "lineNumber": 328
  },
  {
    "__docId__": 245,
    "kind": "testIt",
    "name": "it62",
    "testId": 62,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it62",
    "access": null,
    "description": "should detach from the map when disabled",
    "lineNumber": 335
  },
  {
    "__docId__": 246,
    "kind": "testIt",
    "name": "it63",
    "testId": 63,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it63",
    "access": null,
    "description": "should re-attach to the map after being re-enabled (if selected)",
    "lineNumber": 341
  },
  {
    "__docId__": 247,
    "kind": "testIt",
    "name": "it64",
    "testId": 64,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it64",
    "access": null,
    "description": "should not detach from the map if it is already detached",
    "lineNumber": 348
  },
  {
    "__docId__": 248,
    "kind": "testIt",
    "name": "it65",
    "testId": 65,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe39",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe39.it65",
    "access": null,
    "description": "should disable itself if the map is zoomed beyond its zoom boundaries",
    "lineNumber": 355
  }
]