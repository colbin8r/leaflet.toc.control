[
  {
    "__docId__": 12030,
    "kind": "file",
    "name": "src/Leaflet.Control.NestedLayers.js",
    "content": "// import chalk from 'chalk';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport LayerHierarchy from './Leaflet.LayerHierarchy';\nimport NestedLayer from './Leaflet.NestedLayer';\nimport classnames from 'classnames';\n\n/**\n * React component to represent a LayerHierarchy\n * @param {object} props The component's props.\n * @param {LayerHierarchy} props.hierarchy The LayerHierarchy the component displays.\n */\nexport class NestedLayersComponent extends React.Component {\n  /**\n   * @param {object} props The component's props.\n   * @param {LayerHierarchy} props.hierarchy The LayerHierarchy the component displays.\n   */\n  constructor(props) {\n    super(props);\n    this.state = {\n      hierarchy: this.props.hierarchy\n    }\n  }\n\n  /**\n   * Describes the React props object\n   * @type {Object}\n   */\n  static propTypes = {\n    hierarchy: PropTypes.instanceOf(LayerHierarchy).isRequired\n  };\n\n  /**\n   * Generates a unique key for rendering a layer in JSX\n   * @param  {NestedLayer} layer The layer to use data from\n   * @return {string}       A string unique to this layer\n   */\n  makeLayerKey(layer) {\n    return (layer.id.toString + layer.name);\n  }\n\n  /**\n   * Event handler to toggle a layer's selected state\n   * @param  {NestedLayer} layer The layer to toggle\n   */\n  handleToggleSelected = (layer) => {\n    const id = layer.id;\n    const newHierarchy = this.state.hierarchy;\n    newHierarchy.getLayerByID(id).toggleSelected();\n    this.setState({\n      hierarchy: newHierarchy\n    });\n  }\n\n  /**\n   * Recursively renders a NestedLayer using NestedLayerComponent. If the NestedLayer has\n   * children, use this function as it not only renders a single NestedLayer, but also the subtree\n   * of layers under the NestedLayer recursively.\n   * @param  {NestedLayer} layer The layer to represent with a React component\n   * @return {NestedLayerComponent}       A react component representing the given NestedLayer.\n   */\n  makeComponentFromLayer = (layer) => {\n    // recursive function\n    // 'leaf' is the base case\n    // property initializer syntax + arrow function keeps the scope of 'this' through recursive calls\n    let componentChildren;\n\n    // branch: this layer has children\n    if (layer.children.length > 0) {\n      // leaves = layer.children.map(this.makeComponentFromLayer)\n      componentChildren = (\n        <ul className=\"branch\">\n          {layer.children.map(this.makeComponentFromLayer)}\n        </ul>\n      );\n    }\n\n    return (\n      <NestedLayerComponent layer={layer} onToggleSelected={this.handleToggleSelected} key={this.makeLayerKey(layer)}>\n        {componentChildren}\n      </NestedLayerComponent>\n    );\n\n  }\n\n  /**\n   * Renders the component\n   * @return {Component} JSX\n   */\n  render() {\n    const roots = this.state.hierarchy.rootLayers;\n    let components = [];\n\n    for (let i = 0; i < roots.length; i++) {\n      components.push(this.makeComponentFromLayer(roots[i]));\n    }\n\n    return (\n      <div className=\"nested-layer-control-container\">\n        <h2>TOC CONTROL</h2>\n        <ul className=\"branch nested-layer-control\">\n          {components}\n        </ul>\n      </div>\n    );\n  }\n}\n\n/**\n * React Component to represent a single NestedLayer\n * @param {object} props Component properties\n * @param {NestedLayer} props.layer The layer to represent\n * @param {function} props.onToggleSelected The callback to change the layer's selected state\n */\nexport class NestedLayerComponent extends React.Component {\n  /**\n   * @param {object} props Component properties\n   * @param {NestedLayer} props.layer The layer to represent\n   * @param {function} props.onToggleSelected The callback to change the layer's selected state\n   */\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * Describes the React props object\n   * @type {Object}\n   */\n  static propTypes = {\n    layer: PropTypes.instanceOf(NestedLayer).isRequired,\n    onToggleSelected: PropTypes.func.isRequired,\n    children: PropTypes.any\n  };\n\n  /**\n   * Calls the toggle selected state handler passed by the parent to change the selected state of\n   * the layer\n   */\n  toggleSelected = () => {\n    // updates both the component state and the LayerHierarchy structure\n    this.props.onToggleSelected(this.props.layer);\n  }\n\n  /**\n   * Returns a data URL suitable for use in a the src of an <img /> that contains the base 64\n   * encoded layer swatch\n   * @return {string} data URL containing the swatch\n   */\n  getSwatch = () => {\n    return 'data:image/png;base64,' + this.props.layer.swatch;\n  }\n\n  /**\n   * Renders the component\n   * @return {Component} JSX\n   */\n  render() {\n    const itemClassNames = classnames({\n      leaf: true,\n      enabled: this.props.layer.enabled,\n      disabled: this.props.layer.disabled,\n      selected: this.props.layer.selected,\n      deselected: this.props.layer.deselected\n    });\n    return (\n      <li className={itemClassNames} >\n        <input type=\"checkbox\" checked={this.props.layer.selected} onChange={this.toggleSelected}/>\n        {this.props.layer.swatch.length > 0 &&\n          <img src={this.getSwatch()} className=\"swatch\" />\n        }\n        <span className=\"layer-name\">{this.props.layer.name}</span>\n\n        {this.props.children}\n      </li>\n    );\n  }\n}\n\n/**\n * Leaflet plugin to display a hierarchial version of {@link http://leafletjs.com/reference-1.1.0.html#control-layers L.Control.Layers}. Uses React to wrap the\n * NestedLayersComponent.\n * @param  {LayerHierarchy} hierarchy The hierarchy to display in the control\n * @param  {Element} element   The DOM element to bind the control to\n * @param  {object} options   Configuration options that dictate how the control should behave\n */\nexport default class NestedLayers {\n\n  /**\n   * Initialize the plugin and {@link #NestedLayers#attach attaches} to the DOM.\n   * @param  {LayerHierarchy} hierarchy The hierarchy to display in the control\n   * @param  {Element} element   The DOM element to bind the control to\n   * @param  {object} options   Configuration options that dictate how the control should behave\n   * @param  {boolean} [options.followAncestorVisibility=true] Deselecting any ancestor makes its\n   * children invisible (without changing their selected state)\n   * @param {boolean} [options.propogateDeselectToChildren=false] Deselecting a parent also deselects\n   * children (by changing their state)\n   * @param {boolean} [options.followAncestorMutability=true] Deselecting any ancestor disables its\n   * children (cannot change children's selected state)\n   */\n  constructor(hierarchy, element, options) {\n\n    if (typeof hierarchy == 'undefined') {\n      throw new Error('Missing hierarchy when creating NestedLayers control');\n    }\n    this.hierarchy = hierarchy;\n    if (typeof element == 'undefined') {\n      throw new Error('Missing DOM element when creating NestedLayers control');\n    }\n    this.element = element;\n\n    // default options\n    this._options = {\n      followAncestorVisibility: true,\n      propogateDeselectToChildren: false,\n      followAncestorMutability: true\n    };\n\n    // overwrite defaults with passed options\n    Object.assign(this._options, options);\n\n    this._component = <NestedLayersComponent hierarchy={this.hierarchy} />\n\n    this._isAttached = false;\n\n    // bind to the DOM\n    this.attach();\n  }\n\n  /**\n   * The underlying hierarchy of layers the plugin visually represents\n   * @type {LayerHierarchy}\n   */\n  get hierarchy() {\n    return this._hierarchy;\n  }\n  /**\n   * Shorthand accessor for the {@link #NestedLayers#hierarchy hierarchy} property\n   */\n  get h() {\n    return this.hierarchy;\n  }\n  set hierarchy(val) {\n    this._hierarchy = val;\n  }\n\n  /**\n   * The DOM element that the control attaches to\n   * @type {Element}\n   */\n  get element() {\n    return this._element;\n  }\n  /**\n   * Shorthand accessor for the {@link #NestedLayers#element element} property\n   */\n  get el() {\n    return this.element;\n  }\n  set element(val) {\n    this._element = val;\n  }\n\n  /**\n   * The React component under the hood\n   * @type {NestedLayersComponent}\n   */\n  get component() {\n    return this._component;\n  }\n\n  /**\n   * True if the plugin has attached itself to the DOM element\n   * @type {boolean}\n   */\n  get isAttached() {\n    return this._isAttached;\n  }\n  // no direct setting of 'isAttached' from outside the class\n  // the attach() and detach() methods handle this state\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Bind to the DOM. Internally, it checks to see if it has already been attached, and if not,\n   * uses React to render the {@link #NestedLayers#component component} to the specified {@link\n   * #NestedLayers#element element}.\n   */\n  attach() {\n    if (!this.isAttached) {\n      ReactDOM.render(\n        this.component,\n        this.element\n      );\n    }\n    this._isAttached = true;\n  }\n\n  /**\n   * Unbind from the DOM. Releases the {@link #NestedLayers#element element} for reuse.\n   */\n  detach() {\n    if (this.isAttached) {\n      ReactDOM.unmountComponentAtNode(this.element);\n    }\n    this._isAttached = true;\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12031,
    "kind": "class",
    "name": "NestedLayersComponent",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "{NestedLayersComponent}",
    "description": "React component to represent a LayerHierarchy",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The component's props."
      },
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "props.hierarchy",
        "description": "The LayerHierarchy the component displays."
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 12032,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#constructor",
    "access": null,
    "description": "",
    "lineNumber": 20,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "The component's props."
      },
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "props.hierarchy",
        "description": "The LayerHierarchy the component displays."
      }
    ]
  },
  {
    "__docId__": 12033,
    "kind": "member",
    "name": "state",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#state",
    "access": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"hierarchy\": *}"
      ]
    }
  },
  {
    "__docId__": 12034,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent.propTypes",
    "access": null,
    "description": "Describes the React props object",
    "lineNumber": 31,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12035,
    "kind": "method",
    "name": "makeLayerKey",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#makeLayerKey",
    "access": null,
    "description": "Generates a unique key for rendering a layer in JSX",
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to use data from"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "A string unique to this layer"
    }
  },
  {
    "__docId__": 12036,
    "kind": "member",
    "name": "handleToggleSelected",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#handleToggleSelected",
    "access": null,
    "description": "Event handler to toggle a layer's selected state",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to toggle"
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12037,
    "kind": "member",
    "name": "makeComponentFromLayer",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#makeComponentFromLayer",
    "access": null,
    "description": "Recursively renders a NestedLayer using NestedLayerComponent. If the NestedLayer has\nchildren, use this function as it not only renders a single NestedLayer, but also the subtree\nof layers under the NestedLayer recursively.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to represent with a React component"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NestedLayerComponent"
      ],
      "spread": false,
      "description": "A react component representing the given NestedLayer."
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12038,
    "kind": "method",
    "name": "render",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayersComponent#render",
    "access": null,
    "description": "Renders the component",
    "lineNumber": 92,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 12039,
    "kind": "class",
    "name": "NestedLayerComponent",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "{NestedLayerComponent}",
    "description": "React Component to represent a single NestedLayer",
    "lineNumber": 117,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component properties"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.layer",
        "description": "The layer to represent"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onToggleSelected",
        "description": "The callback to change the layer's selected state"
      }
    ],
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 12040,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#constructor",
    "access": null,
    "description": "",
    "lineNumber": 123,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Component properties"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "props.layer",
        "description": "The layer to represent"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "props.onToggleSelected",
        "description": "The callback to change the layer's selected state"
      }
    ]
  },
  {
    "__docId__": 12041,
    "kind": "member",
    "name": "state",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#state",
    "access": null,
    "description": null,
    "lineNumber": 125,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 12042,
    "kind": "member",
    "name": "propTypes",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent.propTypes",
    "access": null,
    "description": "Describes the React props object",
    "lineNumber": 132,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12043,
    "kind": "member",
    "name": "toggleSelected",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#toggleSelected",
    "access": null,
    "description": "Calls the toggle selected state handler passed by the parent to change the selected state of\nthe layer",
    "lineNumber": 142,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12044,
    "kind": "member",
    "name": "getSwatch",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#getSwatch",
    "access": null,
    "description": "Returns a data URL suitable for use in a the src of an <img /> that contains the base 64\nencoded layer swatch",
    "lineNumber": 152,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "data URL containing the swatch"
    },
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12045,
    "kind": "method",
    "name": "render",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayerComponent#render",
    "access": null,
    "description": "Renders the component",
    "lineNumber": 160,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Component"
      ],
      "spread": false,
      "description": "JSX"
    }
  },
  {
    "__docId__": 12046,
    "kind": "class",
    "name": "NestedLayers",
    "memberof": "src/Leaflet.Control.NestedLayers.js",
    "static": true,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Control.NestedLayers.js",
    "importStyle": "NestedLayers",
    "description": "Leaflet plugin to display a hierarchial version of {@link http://leafletjs.com/reference-1.1.0.html#control-layers L.Control.Layers}. Uses React to wrap the\nNestedLayersComponent.",
    "lineNumber": 189,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "hierarchy",
        "description": "The hierarchy to display in the control"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The DOM element to bind the control to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the control should behave"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 12047,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#constructor",
    "access": null,
    "description": "Initialize the plugin and {@link #NestedLayers#attach attaches} to the DOM.",
    "lineNumber": 203,
    "params": [
      {
        "nullable": null,
        "types": [
          "LayerHierarchy"
        ],
        "spread": false,
        "optional": false,
        "name": "hierarchy",
        "description": "The hierarchy to display in the control"
      },
      {
        "nullable": null,
        "types": [
          "Element"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "The DOM element to bind the control to"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the control should behave"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorVisibility",
        "description": "Deselecting any ancestor makes its\nchildren invisible (without changing their selected state)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.propogateDeselectToChildren",
        "description": "Deselecting a parent also deselects\nchildren (by changing their state)"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorMutability",
        "description": "Deselecting any ancestor disables its\nchildren (cannot change children's selected state)"
      }
    ]
  },
  {
    "__docId__": 12048,
    "kind": "member",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 208,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12049,
    "kind": "member",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": null,
    "lineNumber": 212,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12050,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_options",
    "access": null,
    "description": null,
    "lineNumber": 215,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"followAncestorVisibility\": boolean, \"propogateDeselectToChildren\": *, \"followAncestorMutability\": boolean}"
      ]
    }
  },
  {
    "__docId__": 12051,
    "kind": "member",
    "name": "_component",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_component",
    "access": null,
    "description": null,
    "lineNumber": 224,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12052,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 226,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12053,
    "kind": "get",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": "The underlying hierarchy of layers the plugin visually represents",
    "lineNumber": 236,
    "type": {
      "nullable": null,
      "types": [
        "LayerHierarchy"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12054,
    "kind": "get",
    "name": "h",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#h",
    "access": null,
    "description": "Shorthand accessor for the {@link #NestedLayers#hierarchy hierarchy} property",
    "lineNumber": 242,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12055,
    "kind": "set",
    "name": "hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 245,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12056,
    "kind": "member",
    "name": "_hierarchy",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_hierarchy",
    "access": null,
    "description": null,
    "lineNumber": 246,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12057,
    "kind": "get",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": "The DOM element that the control attaches to",
    "lineNumber": 253,
    "type": {
      "nullable": null,
      "types": [
        "Element"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12058,
    "kind": "get",
    "name": "el",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#el",
    "access": null,
    "description": "Shorthand accessor for the {@link #NestedLayers#element element} property",
    "lineNumber": 259,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12059,
    "kind": "set",
    "name": "element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#element",
    "access": null,
    "description": null,
    "lineNumber": 262,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12060,
    "kind": "member",
    "name": "_element",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_element",
    "access": null,
    "description": null,
    "lineNumber": 263,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12061,
    "kind": "get",
    "name": "component",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#component",
    "access": null,
    "description": "The React component under the hood",
    "lineNumber": 270,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayersComponent"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12062,
    "kind": "get",
    "name": "isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#isAttached",
    "access": null,
    "description": "True if the plugin has attached itself to the DOM element",
    "lineNumber": 278,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12063,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 288,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12064,
    "kind": "method",
    "name": "attach",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#attach",
    "access": null,
    "description": "Bind to the DOM. Internally, it checks to see if it has already been attached, and if not,\nuses React to render the {@link #NestedLayers#component component} to the specified {@link\n#NestedLayers#element element}.",
    "lineNumber": 297,
    "params": []
  },
  {
    "__docId__": 12065,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 304,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12066,
    "kind": "method",
    "name": "detach",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#detach",
    "access": null,
    "description": "Unbind from the DOM. Releases the {@link #NestedLayers#element element} for reuse.",
    "lineNumber": 310,
    "params": []
  },
  {
    "__docId__": 12067,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.Control.NestedLayers.js~NestedLayers",
    "static": false,
    "longname": "src/Leaflet.Control.NestedLayers.js~NestedLayers#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 314,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12068,
    "kind": "file",
    "name": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "content": "import LayerHierarchy from './Leaflet.LayerHierarchy';\nimport NestedLayer from './Leaflet.NestedLayer';\n\nimport { defaultsDeep as defaults } from 'lodash';\n// superagent mimics the node 'request' library on the client side as an xhr library\nimport superagent from 'superagent';\nimport Promise from 'bluebird';\nimport superagentPromise from 'superagent-promise';\nconst request = superagentPromise(superagent, Promise);\nimport { FeatureLayer } from 'esri-leaflet';\n\n/**\n * Parses the layer data served by an ArcGIS MapServer\n * @param {string} url A valid and reachable ArcGIS MapServer URL\n * @param {L.Map} map A Leaflet Map object, which will be passed to all\n * the layers in the resulting LayerHierarchy\n * @param {object} [options] An optional configuration object\n */\nexport default class MapServerParser {\n\n  static APIEndpoints = {\n    layers: '/layers',\n    legend: '/legend'\n  };\n\n  static QueryParameters = {\n    f: 'json'\n  };\n\n  static Headers = {\n    Accept: 'application/json'\n  };\n\n  /**\n   * Initializes the parser with the given parameters\n   * @param {string} url     A valid and reachable ArcGIS MapServer URL\n   * @param {L.Map} map     A Leaflet Map object, which will be passed to all\n   * the layers in the resulting LayerHierarchy\n   * @param {object} [options] An optional configuration object\n   * @param {object} [options.data] The configuration options related to what data\n   * should be parsed from the MapServer to be included on NestedLayer objects\n   * @param {boolean} [options.data.scale=true] Include minZoom and maxZoom\n   * parameters on the NestedLayer\n   * @param {boolean} [options.data.defaultVisibility=true] Include the\n   * initial selected state of the NestedLayer\n   * @param {object} [options.hierarchyOptions={}] The configuration options\n   * the NestedHierarchy takes on instantiation\n   */\n  constructor(url, map, options) {\n    // ensure required parameters are present\n    if (typeof url == 'undefined') {\n      throw new Error('Missing URL when creating MapServerParser');\n    }\n    if (typeof map == 'undefined') {\n      throw new Error('Missing Leaflet map object when creating MapServerParser');\n    }\n\n    // save url\n    this._url = url;\n\n    // save map\n    this._map = map;\n\n    // set default options\n    this._defaults = {\n      data: {\n        scale: true,\n        defaultVisibility: true,\n        swatch: false\n      },\n      hierarchyOptions: {}\n    }\n\n    // merge options with defaults\n    this._options = {};\n    // https://lodash.com/docs/4.17.4#defaultsDeep\n    defaults(this._options, options, this.defaults);\n  }\n\n  /**\n   * MapServer URL\n   * @type {string}\n   */\n  get url() {\n    return this._url;\n  }\n\n  /**\n   * Leaflet Map object\n   * @type {L.Map}\n   */\n  get map() {\n    return this._map;\n  }\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Default configuration options\n   * @type {object}\n   */\n  get defaults() {\n    return this._defaults;\n  }\n\n  parse() {\n    // we have to wait for both xhr promises to resolve before we can begin processing\n    // note that Promise.join returns a promise that resolves to a LayerHierarchy\n    return Promise.join(this._queryLayers(), this._queryLegend(), (layerRes, legendRes) => {\n      // ensure we hit HTTP 2xx statuses\n      if (!layerRes.ok || !legendRes.ok) {\n        throw new Error('Bad request: HTTP status was not 2xx');\n      }\n\n      // parse the layerdata into JSON\n      let body = layerRes.body;\n      // ArcGIS does not properly set its Content-Type header\n      // so force JSON parsing if superagent did not parse automatically\n      if (layerRes.type !== MapServerParser.Headers.Accept) {\n        body = JSON.parse(layerRes.text);\n      }\n\n      // parse the legend into JSON\n      let legend = legendRes.body;\n      // ArcGIS does not properly set its Content-Type header\n      // so force JSON parsing if superagent did not parse automatically\n      if (legendRes.type !== MapServerParser.Headers.Accept) {\n        legend = JSON.parse(legendRes.text);\n      }\n      // the actual legend is located under the 'layers' node\n      legend = legend.layers;\n\n      // create the LayerHierarchy\n      var hierarchy = new LayerHierarchy(this.options.hierarchyOptions);\n\n      // move layers down as children of other layers\n      body.layers.forEach((node) => {\n        let layer = this._convertLayerNodeToNestedLayer(node, legend);\n        let parent = (node.parentLayer !== null ? node.parentLayer.id : undefined);\n        // if this layer has no parent, addLayer(...) will add as a root layer\n        hierarchy.addLayer(layer, parent);\n      });\n\n      // resolve the promise with the resulting LayerHierarchy\n      return hierarchy;\n    });\n  }\n\n  /**\n   * Queries the layers endpoint of the MapServer for layer data.\n   * @return {Promise} Promise that resolves the request.\n   */\n  _queryLayers() {\n    // assemble layerdata url\n    const layerdataURL = this.url + MapServerParser.APIEndpoints.layers;\n\n    // fetch layerdata as JSON\n    return request\n      .get(layerdataURL)\n      .set(MapServerParser.Headers)\n      .query(MapServerParser.QueryParameters)\n      .end();\n  }\n\n  _queryLegend() {\n    // assemble legend url\n    const legendURL = this.url + MapServerParser.APIEndpoints.legend;\n\n    // fetch legend as JSON\n    return request\n      .get(legendURL)\n      .set(MapServerParser.Headers)\n      .query(MapServerParser.QueryParameters)\n      .end();\n  }\n\n  _convertLayerNodeToNestedLayer = (node, legend) => {\n    let nestedLayerData = {\n      id: node.id,\n      name: node.name.trim(),\n      map: this.map\n    };\n    // Leaflet layer data\n    let leafletLayerData = {\n      url: MapServerParser._makeLayerURL(this.url, nestedLayerData.id)\n    };\n\n    // get scale/zoom data from layer node\n    if (this.options.data.scale) {\n      // converts scale factor from ArcGIS to Leaflet's zoom factor\n      // http://leafletjs.com/reference-1.1.0.html#crs-scale\n      // leafletLayerData.maxZoom = this.map.options.crs.zoom(node.maxScale);\n      // leafletLayerData.minZoom = this.map.options.crs.zoom(node.minScale);\n      console.warn('Floor\\'ing maxZoom and ceil\\'ing minZoom');\n      // console.log(nestedLayerData.name, 'minZoom', leafletLayerData.minZoom, 'maxZoom', leafletLayerData.maxZoom)\n      leafletLayerData.maxZoom = Math.floor(this.map.options.crs.zoom(node.maxScale));\n      leafletLayerData.minZoom = Math.ceil(this.map.options.crs.zoom(node.minScale));\n    }\n\n    // attach the swatch data\n    // if (this.options.data.swatch && legend[nestedLayerData.id].legend.length > 0) {\n    //   nestedLayerData.swatch = legend[nestedLayerData.id].legend[0].imageData;\n    //   console.log(nestedLayerData.name, nestedLayerData.id, nestedLayerData.swatch);\n    // }\n    if (this.options.data.swatch) {\n      nestedLayerData.swatch = MapServerParser._findSwatchInLegend(legend, nestedLayerData.id);\n    }\n\n    // attach the Leaflet layer object to the NestedLayer's data\n    nestedLayerData.layer = new FeatureLayer(leafletLayerData);\n\n    // create a new NestedLayer that wraps the Leaflet layer, map, etc.\n    let layer = new NestedLayer(nestedLayerData);\n\n    // set the selected state = to the node's default visibility state\n    if (this.options.data.defaultVisibility) {\n      layer.selected = node.defaultVisibility;\n    }\n\n    // returns a NestedLayer object\n    return layer;\n  }\n\n  static _findSwatchInLegend(legend, layerID) {\n    // if no swatches even exist (e.g. invalid legend)\n    if (legend.length <= 0) { return ''; }\n\n    // loop through to try to find a valid swatch\n    // this algorithm could be optimized from O(n) due to\n    // the sorted nature of the legend\n    // it just must account for the fact that a legend object may not exist for\n    // any given layer\n    for (let i = 0; i < legend.length; i++) {\n      if (legend[i].layerId == layerID && legend[i].legend.length > 0) {\n        return legend[i].legend[0].imageData;\n      }\n    }\n\n    // no swatch found\n    return '';\n  }\n\n  static _makeLayerURL(baseURL, layerID) {\n    if (typeof baseURL !== 'string') {\n      throw new Error('Base URL was undefined, null, or was not a string');\n    }\n    if (typeof layerID !== 'number') {\n      throw new Error('ID was undefined, null, or was not a number');\n    }\n\n    return baseURL + '/' + layerID.toString();\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12069,
    "kind": "variable",
    "name": "request",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~request",
    "access": null,
    "export": false,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.MapServerParser.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12070,
    "kind": "class",
    "name": "MapServerParser",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.MapServerParser.js",
    "importStyle": "MapServerParser",
    "description": "Parses the layer data served by an ArcGIS MapServer",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "A valid and reachable ArcGIS MapServer URL"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A Leaflet Map object, which will be passed to all\nthe layers in the resulting LayerHierarchy"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An optional configuration object"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 12071,
    "kind": "member",
    "name": "APIEndpoints",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.APIEndpoints",
    "access": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"layers\": string, \"legend\": string}"
      ]
    }
  },
  {
    "__docId__": 12072,
    "kind": "member",
    "name": "QueryParameters",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.QueryParameters",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"f\": string}"
      ]
    }
  },
  {
    "__docId__": 12073,
    "kind": "member",
    "name": "Headers",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser.Headers",
    "access": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"Accept\": string}"
      ]
    }
  },
  {
    "__docId__": 12074,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#constructor",
    "access": null,
    "description": "Initializes the parser with the given parameters",
    "lineNumber": 49,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "url",
        "description": "A valid and reachable ArcGIS MapServer URL"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "A Leaflet Map object, which will be passed to all\nthe layers in the resulting LayerHierarchy"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "An optional configuration object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.data",
        "description": "The configuration options related to what data\nshould be parsed from the MapServer to be included on NestedLayer objects"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.data.scale",
        "description": "Include minZoom and maxZoom\nparameters on the NestedLayer"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.data.defaultVisibility",
        "description": "Include the\ninitial selected state of the NestedLayer"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options.hierarchyOptions",
        "description": "The configuration options\nthe NestedHierarchy takes on instantiation"
      }
    ]
  },
  {
    "__docId__": 12075,
    "kind": "member",
    "name": "_url",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_url",
    "access": null,
    "description": null,
    "lineNumber": 59,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12076,
    "kind": "member",
    "name": "_map",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_map",
    "access": null,
    "description": null,
    "lineNumber": 62,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12077,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_defaults",
    "access": null,
    "description": null,
    "lineNumber": 65,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"data\": *, \"hierarchyOptions\": *}"
      ]
    }
  },
  {
    "__docId__": 12078,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_options",
    "access": null,
    "description": null,
    "lineNumber": 75,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 12079,
    "kind": "get",
    "name": "url",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#url",
    "access": null,
    "description": "MapServer URL",
    "lineNumber": 84,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12080,
    "kind": "get",
    "name": "map",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#map",
    "access": null,
    "description": "Leaflet Map object",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "L.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12081,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12082,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#defaults",
    "access": null,
    "description": "Default configuration options",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12083,
    "kind": "method",
    "name": "parse",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#parse",
    "access": null,
    "description": null,
    "lineNumber": 112,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12084,
    "kind": "method",
    "name": "_queryLayers",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_queryLayers",
    "access": null,
    "description": "Queries the layers endpoint of the MapServer for layer data.",
    "lineNumber": 159,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise that resolves the request."
    }
  },
  {
    "__docId__": 12085,
    "kind": "method",
    "name": "_queryLegend",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_queryLegend",
    "access": null,
    "description": null,
    "lineNumber": 171,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12086,
    "kind": "member",
    "name": "_convertLayerNodeToNestedLayer",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser#_convertLayerNodeToNestedLayer",
    "access": null,
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12087,
    "kind": "method",
    "name": "_findSwatchInLegend",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser._findSwatchInLegend",
    "access": null,
    "description": null,
    "lineNumber": 230,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "legend",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerID",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "string"
      ]
    }
  },
  {
    "__docId__": 12088,
    "kind": "method",
    "name": "_makeLayerURL",
    "memberof": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.MapServerParser.js~MapServerParser._makeLayerURL",
    "access": null,
    "description": null,
    "lineNumber": 249,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "baseURL",
        "types": [
          "*"
        ]
      },
      {
        "name": "layerID",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12089,
    "kind": "file",
    "name": "src/Leaflet.LayerHierarchy.js",
    "content": "import NestedLayer from './Leaflet.NestedLayer';\n\n/**\n * Represents a non-rooted tree structure of NestedLayer objects\n * @param {object} options Configuration options that dictate how the tree\n * should behave\n */\nexport default class LayerHierarchy {\n\n  /**\n   * @param {object} options Configuration options\n   * @param {NestedLayer[]} [options.layers=[]] Layers to include at the root\n   * level\n   * @param {boolean} [options.followAncestorVisibility=true] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   * @param {boolean} [options.propogateDeselectToChildren=false] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   * @param {boolean} [options.followAncestorMutability=true] {@link\n   * #NestedLayers#constructor See the plugin constructor.}\n   */\n  constructor(options) {\n    // for the layers parameter, ensure that we are at least passed an array\n    // otherwise, default to empty array\n\n    // default options\n    this._options = {\n      // 'layers' will be deleted by the end of the constructor\n      layers: [],\n      followAncestorVisibility: true,\n      propogateDeselectToChildren: false,\n      followAncestorMutability: true\n    };\n\n    // overwrite defaults with passed options\n    Object.assign(this._options, options);\n\n    // extract the 'layers' property from 'options' into its own property\n    this._layers = this.options.layers;\n    delete this._options.layers;\n\n    this.validateEnabledStates();\n\n    this.ownAllLayers(this.layers);\n  }\n\n  /**\n   * Configuration options\n   * @type {object}\n   */\n  get options() {\n    return this._options;\n  }\n\n  /**\n   * Adds a new layer into the tree. Defaults to insertion at the root of the\n   * tree, but passing a the ID of another layer will insert the layer as a\n   * child of that parent.\n   * @param {NestedLayer} layer    The layer to insert\n   * @param {?number} [parentID=null] The ID of a parent to insert underneath\n   */\n  addLayer(layer, parentID) {\n    // id, name, layer, defaultVisibility, minScale, maxScale, children\n    // layer should be a NestedLayer\n\n    if (!(layer instanceof NestedLayer)) {\n      throw new TypeError('layer is not a NestedLayer');\n    }\n\n    // take ownership of the layer\n    this.ownLayer(layer);\n\n    if (typeof parentID != 'undefined') {\n      // add as child\n      this.getLayerByID(parentID).addChild(layer);\n    } else {\n      // no parent, add at root level\n      this._layers.push(layer);\n    }\n  }\n\n  /**\n   * Finds a layer in the tree by ID. Traverses the tree recurisvely until it\n   * is found. Don't pass children unless you want to search a specific\n   * subtree.\n   * @param  {number}          id       The layer ID to search for\n   * @param  {NestedLayer[]}   [children=this.layers] A subtree to search\n   * @return {?NestedLayer}     The layer if found, or null otherwise.\n   */\n  getLayerByID(id, children) {\n\n    // if the function was not called recursively\n    if (!children) {\n      children = this._layers;\n    }\n\n    for (let i = 0; i < children.length; i++) {\n\n      // if the child matches\n      if (children[i].id == id) {\n        // return the child\n        return children[i];\n\n      } else {\n\n        // if the child has its own children\n        if (children[i].children && children[i].children.length > 0) {\n\n          // reucrisvely check them\n          let recursiveResult = this.getLayerByID(id, children[i].children);\n          if (recursiveResult !== null) {\n            return recursiveResult;\n          }\n\n        }\n      }\n\n    }\n\n    // if execution reaches here, no layers in this tree or subtree have the requested id\n    return null;\n  }\n\n  /**\n   * Root-level NestedLayer layers\n   * @type {NestedLayer[]}\n   */\n  get layers() {\n    return this._layers;\n  }\n  /**\n   * {@link #LayerHierarchy#layers Root-level NestedLayer layers}\n   * @type {NestedLayer[]}\n   */\n  get rootLayers() {\n    return this.layers;\n  }\n\n  // check all the children to ensure that they are all enabled/disabled as appropriate\n  // the highest layer takes precedence over lower layers\n  // i.e. if a root-level layer is disabled, then all its children will be disabled as well\n  // parameters should be undefined when called the first time; the function is recursive\n  validateEnabledStates(layers, newEnabledValue) {\n    // first call? then layers = the whole true\n    if (typeof layers === 'undefined') {\n      // console.log('validateEnabledStates: first call');\n      layers = this.rootLayers;\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n      // console.log('validateEnabledStates: checking', layers[i].name);\n\n      // if we have a specific enabled value, set the children to that\n      if (typeof newEnabledValue !== 'undefined') {\n        // console.log('validateEnabledStates: setting', layers[i].name, 'to', newEnabledValue);\n        layers[i].enabled = newEnabledValue;\n      }\n\n      // if the layer has children, repeat this process on them\n      // console.log('validateEnabledStates: does', layers[i].name, 'have children?', (layers[i].hasChildren ? 'yes' : 'no'));\n      if (layers[i].hasChildren) {\n        // console.log('validateEnabledStates: setting children of', layers[i].name, 'to', layers[i].enabled);\n        this.validateEnabledStates(layers[i].children, layers[i].enabled)\n      }\n\n    }\n\n  }\n\n  /**\n   * Checks if this LayerHierarchy owns the provided layer\n   * @param  {NestedLayer} layer The layer to check\n   * @return {boolean}       True if the layer is owned by this hierarchy; false otherwise\n   */\n  ownsLayer(layer) {\n    return layer.owner === this;\n  }\n\n  /**\n   * Factory method for making a new NestedLayer that is owned by this hierarchy\n   * @param  {object} layerData The same object you would provide to the {@link #NestedLayer#constructor constructor of NestedLayer}\n   * @return {NestedLayer}           A NestedLayer owned by this hierarchy\n   */\n  makeLayer(layerData) {\n    const l = new NestedLayer(layerData);\n    l.owner = this;\n    return l;\n  }\n\n  /**\n   * Take ownership of a layer\n   * @param  {NestedLayer} layer The layer to become the owner of\n   */\n  ownLayer(layer) {\n    layer.owner = this;\n  }\n\n  /**\n   * Take ownership of a layer subtree AND those layers' children\n   * @param  {NestedLayer[]} layers The layers to become the owner of\n   */\n  ownAllLayers(layers) {\n    for (let i = 0; i < layers.length; i++) {\n      this.ownLayer(layers[i]);\n      layers[i].ownChildren();\n    }\n  }\n\n}\n",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12090,
    "kind": "class",
    "name": "LayerHierarchy",
    "memberof": "src/Leaflet.LayerHierarchy.js",
    "static": true,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.LayerHierarchy.js",
    "importStyle": "LayerHierarchy",
    "description": "Represents a non-rooted tree structure of NestedLayer objects",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options that dictate how the tree\nshould behave"
      }
    ],
    "interface": false
  },
  {
    "__docId__": 12091,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#constructor",
    "access": null,
    "description": "",
    "lineNumber": 21,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Configuration options"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "options.layers",
        "description": "Layers to include at the root\nlevel"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorVisibility",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.propogateDeselectToChildren",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.followAncestorMutability",
        "description": "{@link\n#NestedLayers#constructor See the plugin constructor.}"
      }
    ]
  },
  {
    "__docId__": 12092,
    "kind": "member",
    "name": "_options",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#_options",
    "access": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"layers\": *, \"followAncestorVisibility\": boolean, \"propogateDeselectToChildren\": *, \"followAncestorMutability\": boolean}"
      ]
    }
  },
  {
    "__docId__": 12093,
    "kind": "member",
    "name": "_layers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#_layers",
    "access": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12094,
    "kind": "get",
    "name": "options",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#options",
    "access": null,
    "description": "Configuration options",
    "lineNumber": 50,
    "type": {
      "nullable": null,
      "types": [
        "object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12095,
    "kind": "method",
    "name": "addLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#addLayer",
    "access": null,
    "description": "Adds a new layer into the tree. Defaults to insertion at the root of the\ntree, but passing a the ID of another layer will insert the layer as a\nchild of that parent.",
    "lineNumber": 61,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to insert"
      },
      {
        "nullable": true,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "parentID",
        "description": "The ID of a parent to insert underneath"
      }
    ]
  },
  {
    "__docId__": 12096,
    "kind": "method",
    "name": "getLayerByID",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#getLayerByID",
    "access": null,
    "description": "Finds a layer in the tree by ID. Traverses the tree recurisvely until it\nis found. Don't pass children unless you want to search a specific\nsubtree.",
    "lineNumber": 89,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "id",
        "description": "The layer ID to search for"
      },
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "this.layers",
        "defaultRaw": "this.layers",
        "name": "children",
        "description": "A subtree to search"
      }
    ],
    "return": {
      "nullable": true,
      "types": [
        "NestedLayer"
      ],
      "spread": false,
      "description": "The layer if found, or null otherwise."
    }
  },
  {
    "__docId__": 12097,
    "kind": "get",
    "name": "layers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#layers",
    "access": null,
    "description": "Root-level NestedLayer layers",
    "lineNumber": 127,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12098,
    "kind": "get",
    "name": "rootLayers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#rootLayers",
    "access": null,
    "description": "{@link #LayerHierarchy#layers Root-level NestedLayer layers}",
    "lineNumber": 134,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12099,
    "kind": "method",
    "name": "validateEnabledStates",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#validateEnabledStates",
    "access": null,
    "description": null,
    "lineNumber": 142,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "layers",
        "types": [
          "*"
        ]
      },
      {
        "name": "newEnabledValue",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 12100,
    "kind": "method",
    "name": "ownsLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownsLayer",
    "access": null,
    "description": "Checks if this LayerHierarchy owns the provided layer",
    "lineNumber": 174,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to check"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "True if the layer is owned by this hierarchy; false otherwise"
    }
  },
  {
    "__docId__": 12101,
    "kind": "method",
    "name": "makeLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#makeLayer",
    "access": null,
    "description": "Factory method for making a new NestedLayer that is owned by this hierarchy",
    "lineNumber": 183,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "layerData",
        "description": "The same object you would provide to the {@link #NestedLayer#constructor constructor of NestedLayer}"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "NestedLayer"
      ],
      "spread": false,
      "description": "A NestedLayer owned by this hierarchy"
    }
  },
  {
    "__docId__": 12102,
    "kind": "method",
    "name": "ownLayer",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownLayer",
    "access": null,
    "description": "Take ownership of a layer",
    "lineNumber": 193,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "The layer to become the owner of"
      }
    ]
  },
  {
    "__docId__": 12103,
    "kind": "method",
    "name": "ownAllLayers",
    "memberof": "src/Leaflet.LayerHierarchy.js~LayerHierarchy",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.LayerHierarchy.js~LayerHierarchy#ownAllLayers",
    "access": null,
    "description": "Take ownership of a layer subtree AND those layers' children",
    "lineNumber": 201,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "layers",
        "description": "The layers to become the owner of"
      }
    ]
  },
  {
    "__docId__": 12104,
    "kind": "file",
    "name": "src/Leaflet.NestedLayer.js",
    "content": "import { defaultsDeep as defaults } from 'lodash';\n\nlet lastID = 0;\n\n/**\n * Generate a ID number guaranteed to be unique.\n * IDs are composed of a pseudorandom 4-digit number suffixed by an incrementing counter.\n * @return {Number} Unique ID number\n */\nexport function generateID() {\n  // generates a 4 digit random number\n  // lastID is appended to the end of the number\n  // lastID is incremented each\n  return Number.parseInt(Math.floor(1000 + Math.random() * 9000).toString()\n                         + (lastID++).toString());\n}\n\n/**\n * Wraps a Leaflet Layer to allow that layer to be the \"parent\" of other layers by having\n * \"child\" layers\n * @see http://leafletjs.com/reference-1.1.0.html#layer\n */\nexport default class NestedLayer {\n\n  static _defaults = {\n    parent: null,\n    children: [],\n    enabled: true,\n    selected: false,\n    minZoom: Number.NEGATIVE_INFINITY,\n    maxZoom: Number.POSITIVE_INFINITY,\n    rules: {\n      enableTriggersAttach: true,\n      alwaysDeselectedWhenDisabled: true\n    },\n    _isAttached: false\n  }\n\n  get defaults() {\n    // uses reflection to return the static _defaults property on the class\n    return this.constructor._defaults;\n  }\n\n  /**\n   *\n   * @param {object} props The layer data\n   * @param {number} props.id The layer's unique ID number\n   * @param {string} props.name The layer's unique name\n   * @param {L.Layer} props.layer A {@link\n   * http://leafletjs.com/reference-1.1.0.html#layer Leaflet layer}\n   * @param {L.Map} props.map {@link\n   * http://leafletjs.com/reference-1.1.0.html#map Leaflet map} to attach to\n   * @param {boolean} [props.enabled=true] Initial enabled state of the layer\n   * @param {boolean} [props.selected=false] Initial selected state of the layer\n   * @param {string} [props.swatch=''] Base64 encoded swatch PNG\n   * @param {NestedLayer[]} [props.children=[]] Child layers\n   * @param {number} [props.minZoom] Minimum zoom level that the layer should be visible\n   * @param {number} [props.maxZoom] Maximum zoom level that the layer should be visible\n   */\n\n  /**\n   * Creates a new NestedLayer.\n   * @param  {number} layerID ID of the layer on the origin.\n   * @param  {string} name    Name of the layer on the origin; display-friendly\n   * @param  {L.Layer} layer   Leaflet layer\n   * @param  {L.Map} map     Leaflet map\n   * @param  {object} props   Optional properties\n   */\n  constructor(layerID, name, layer, map, props) {\n\n    // ensure all required props are present\n    if (typeof layerID == 'undefined') {\n      throw new Error('Missing layer ID when creating NestedLayer');\n    }\n    if (typeof name == 'undefined') {\n      throw new Error('Missing name when creating NestedLayer');\n    }\n    if (typeof layer == 'undefined') {\n      throw new Error('Missing layer object when creating NestedLayer');\n    }\n    if (typeof map == 'undefined') {\n      throw new Error('Missing map object when creating NestedLayer');\n    }\n\n    // set the required props\n    this._props = {\n      layerID,\n      name,\n      layer,\n      map\n    };\n\n    // merge optional props with defaults\n    // the \"defaults\" also contains the initial state\n    defaults(this._props, props, this.defaults);\n    this._props.id = generateID();\n\n    // if this layer is starting off selected, attach to the map\n    // calling this.select() ensures that we follow any other attachment rules\n    // built into the 'selected' setter\n    if (this.selected) {\n      this.select();\n    }\n\n    // if the zoom properties are on the leaflet layer object, copy them up to the\n    // NestedLayer object\n    if (this.layer.minZoom !== undefined && this.layer.maxZoom !== undefined) {\n      this._props.minZoom = this.layer.minZoom;\n      this._props.maxZoom = this.layer.maxZoom;\n    }\n\n    // if this layer has zoom data, we need to handle the case where the user zooms to a level where\n    // our layer should be disabled according to the minZoom/maxZoom contained in the layer object\n    // if (this.minZoom !== undefined && this.maxZoom !== undefined) {\n    //   this.map.on('zoomend', this._handleMapZoom);\n    // }\n  }\n\n  /**\n   * Layer ID as specified by the server\n   * @type {number}\n   */\n  get layerID() {\n    return this._props.layerID;\n  }\n\n  /**\n   * Layer name\n   * @type {string}\n   */\n  get name() {\n    return this._props.name;\n  }\n\n  /**\n   * Underlying Leaflet layer\n   * @type {L.Layer}\n   */\n  get layer() {\n    return this._props.layer;\n  }\n\n  /**\n   * Leaflet Map to attach to\n   * @type {L.Map}\n   */\n  get map() {\n    return this._props.map;\n  }\n\n  /**\n   * Child layers\n   * @type {NestedLayer[]}\n   */\n  get children() {\n    return this._props.children;\n  }\n\n  /**\n   * Parent layer\n   * @type {NestedLayer}\n   */\n  get parent() {\n    return this._props.parent;\n  }\n\n  /**\n   * Minimum zoom level for this layer to be visible\n   * @type {number}\n   */\n  get minZoom() {\n    return this._props.minZoom;\n  }\n\n  /**\n   * Maximum zoom level for this layer to be visible\n   * @type {number}\n   */\n  get maxZoom() {\n    return this._props.maxZoom;\n  }\n\n  get rules() {\n    return this._props.rules;\n  }\n\n  /**\n   * Unique ID generated for each NestedLayer\n   * @type {number}\n   */\n  get id() {\n    return this._props.id;\n  }\n\n  // enabled = user may freely toggle this layer on and off\n  // disabled = user may not toggle the layer\n  // disabling always deselects the layer, but the selected state is persisted, so that if\n  // the layer is re-enabled, the selected state is what it was prior to disabling\n  // i.e. if disabled, always deselected\n  // this logic is handled in the .selected getter\n\n  /**\n   * Whether the user may freely toggle this layer on and off\n   * @type {boolean}\n   */\n  get enabled() {\n    return this._props.enabled;\n  }\n  set enabled(val) {\n    this._props.enabled = val;\n\n    // if disabling, detach from map\n    if (!val) {\n      this._detach();\n\n    // if enabling, and marked selected (i.e. \"re-enabling\"), attach to map\n    } else if (this.rules.enableTriggersAttach && this._props.selected) {\n      this._attach();\n    }\n  }\n  /**\n   * The inverse of #enabled\n   * @type {boolean}\n   */\n  get disabled() {\n    return !this.enabled;\n  }\n\n  /** Enable the layer */\n  enable() {\n    this.enabled = true;\n  }\n  /** Disable the layer */\n  disable() {\n    this.enabled = false;\n  }\n  /** Toggle the layer's enabled state */\n  toggleEnabled() {\n    this.enabled = !this.enabled;\n  }\n\n  // selected = layer present on the map\n  // deselected = layer not present on the map\n  get selected() {\n    if (this.rules.alwaysDeselectedWhenDisabled && this.disabled) {\n      return false;\n    } else {\n      return this._props.selected;\n    }\n  }\n  set selected(val) {\n    this._props.selected = val;\n\n    // attach/detach from map when needed\n    // disable children from selection when unselected\n    if (this.selected) {\n      this._attach();\n      // this.enableChildren();\n    } else {\n      this._detach();\n      // this.disableChildren();\n    }\n  }\n  get deselected() {\n    return !this.selected;\n  }\n  select() {\n    this.selected = true;\n  }\n  deselect() {\n    this.selected = false;\n  }\n  toggleSelected() {\n    this.selected = !this.selected;\n  }\n\n  // true if the layer has children\n  get hasChildren() {\n    return this.children.length > 0;\n  }\n\n  // add a child NestedLayer object\n  addChild(child) {\n    if (!(child instanceof NestedLayer)) {\n      throw new TypeError('child is not a NestedLayer');\n    }\n    this._props.children.push(child);\n  }\n\n  // enableChildren() {\n  //   this._applyStateChangeToAllChildren('enabled', true, this.children);\n  // }\n\n  // disableChildren() {\n  //   this._applyStateChangeToAllChildren('enabled', false, this.children);\n  // }\n\n  // ownChildren() {\n  //   this._applyStateChangeToAllChildren('owner', this.owner, this.children);\n  // }\n\n  // _applyStateChangeToAllChildren(prop, val, children) {\n  //   // utility to recursively loop through children (and their children, etc.)\n  //   // to change their state\n  //   // IDEA: convert to a \"deep map\" function\n  //   for (let i = 0; i < children.length; i++) {\n  //     // make the state change\n  //     children[i][prop] = val;\n\n  //     // loop through children/subtrees when necessary\n  //     if (children[i].hasChildren) {\n  //       this._applyStateChangeToAllChildren(prop, val, children[i].children);\n  //     }\n  //   }\n  // }\n\n  // _handleMapZoom = () => {\n  //   const zoom = this.map.getZoom();\n\n  //   if (zoom < this.minZoom || zoom > this.maxZoom) {\n  //     this._detach();\n  //   } else {\n  //     this._attach()\n  //   }\n  // }\n\n  // display on map\n  _attach() {\n    if (!this._isAttached) {\n      this.map.addLayer(this.layer);\n      // this.layer.addTo(this.map);\n      this._isAttached = true;\n    }\n  }\n\n  // remove from map\n  _detach() {\n    if (this._isAttached) {\n      this.map.removeLayer(this.layer);\n      // this.layer.removeFrom(this.map);\n      this._isAttached = false;\n    }\n  }\n}\n\n\n",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12105,
    "kind": "variable",
    "name": "lastID",
    "memberof": "src/Leaflet.NestedLayer.js",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js~lastID",
    "access": null,
    "export": false,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayer.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "number"
      ]
    }
  },
  {
    "__docId__": 12106,
    "kind": "function",
    "name": "generateID",
    "memberof": "src/Leaflet.NestedLayer.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js~generateID",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayer.js",
    "importStyle": "{generateID}",
    "description": "Generate a ID number guaranteed to be unique.\nIDs are composed of a pseudorandom 4-digit number suffixed by an incrementing counter.",
    "lineNumber": 10,
    "params": [],
    "return": {
      "nullable": null,
      "types": [
        "Number"
      ],
      "spread": false,
      "description": "Unique ID number"
    }
  },
  {
    "__docId__": 12107,
    "kind": "class",
    "name": "NestedLayer",
    "memberof": "src/Leaflet.NestedLayer.js",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayer.js",
    "importStyle": "NestedLayer",
    "description": "Wraps a Leaflet Layer to allow that layer to be the \"parent\" of other layers by having\n\"child\" layers",
    "see": [
      "http://leafletjs.com/reference-1.1.0.html#layer"
    ],
    "lineNumber": 23,
    "interface": false
  },
  {
    "__docId__": 12108,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": true,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer._defaults",
    "access": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"parent\": *, \"children\": *, \"enabled\": boolean, \"selected\": *, \"minZoom\": *, \"maxZoom\": *, \"rules\": *, \"_isAttached\": *}"
      ]
    }
  },
  {
    "__docId__": 12109,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#defaults",
    "access": null,
    "description": null,
    "lineNumber": 39,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12110,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#constructor",
    "access": null,
    "description": "Creates a new NestedLayer.",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "layerID",
        "description": "ID of the layer on the origin."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "Name of the layer on the origin; display-friendly"
      },
      {
        "nullable": null,
        "types": [
          "L.Layer"
        ],
        "spread": false,
        "optional": false,
        "name": "layer",
        "description": "Leaflet layer"
      },
      {
        "nullable": null,
        "types": [
          "L.Map"
        ],
        "spread": false,
        "optional": false,
        "name": "map",
        "description": "Leaflet map"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "props",
        "description": "Optional properties"
      }
    ]
  },
  {
    "__docId__": 12111,
    "kind": "member",
    "name": "_props",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_props",
    "access": null,
    "description": null,
    "lineNumber": 86,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"layerID\": *, \"name\": *, \"layer\": *, \"map\": *}"
      ]
    }
  },
  {
    "__docId__": 12112,
    "kind": "get",
    "name": "layerID",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#layerID",
    "access": null,
    "description": "Layer ID as specified by the server",
    "lineNumber": 123,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12113,
    "kind": "get",
    "name": "name",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#name",
    "access": null,
    "description": "Layer name",
    "lineNumber": 131,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12114,
    "kind": "get",
    "name": "layer",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#layer",
    "access": null,
    "description": "Underlying Leaflet layer",
    "lineNumber": 139,
    "type": {
      "nullable": null,
      "types": [
        "L.Layer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12115,
    "kind": "get",
    "name": "map",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#map",
    "access": null,
    "description": "Leaflet Map to attach to",
    "lineNumber": 147,
    "type": {
      "nullable": null,
      "types": [
        "L.Map"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12116,
    "kind": "get",
    "name": "children",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#children",
    "access": null,
    "description": "Child layers",
    "lineNumber": 155,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12117,
    "kind": "get",
    "name": "parent",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#parent",
    "access": null,
    "description": "Parent layer",
    "lineNumber": 163,
    "type": {
      "nullable": null,
      "types": [
        "NestedLayer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12118,
    "kind": "get",
    "name": "minZoom",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#minZoom",
    "access": null,
    "description": "Minimum zoom level for this layer to be visible",
    "lineNumber": 171,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12119,
    "kind": "get",
    "name": "maxZoom",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#maxZoom",
    "access": null,
    "description": "Maximum zoom level for this layer to be visible",
    "lineNumber": 179,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12120,
    "kind": "get",
    "name": "rules",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#rules",
    "access": null,
    "description": null,
    "lineNumber": 183,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12121,
    "kind": "get",
    "name": "id",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#id",
    "access": null,
    "description": "Unique ID generated for each NestedLayer",
    "lineNumber": 191,
    "type": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12122,
    "kind": "get",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": "Whether the user may freely toggle this layer on and off",
    "lineNumber": 206,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12123,
    "kind": "set",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 209,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12124,
    "kind": "get",
    "name": "disabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#disabled",
    "access": null,
    "description": "The inverse of #enabled",
    "lineNumber": 225,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 12125,
    "kind": "method",
    "name": "enable",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enable",
    "access": null,
    "description": "Enable the layer",
    "lineNumber": 230,
    "params": []
  },
  {
    "__docId__": 12126,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 231,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12127,
    "kind": "method",
    "name": "disable",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#disable",
    "access": null,
    "description": "Disable the layer",
    "lineNumber": 234,
    "params": []
  },
  {
    "__docId__": 12128,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 235,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12129,
    "kind": "method",
    "name": "toggleEnabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#toggleEnabled",
    "access": null,
    "description": "Toggle the layer's enabled state",
    "lineNumber": 238,
    "params": []
  },
  {
    "__docId__": 12130,
    "kind": "member",
    "name": "enabled",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#enabled",
    "access": null,
    "description": null,
    "lineNumber": 239,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12131,
    "kind": "get",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 244,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12132,
    "kind": "set",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 251,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12133,
    "kind": "get",
    "name": "deselected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#deselected",
    "access": null,
    "description": null,
    "lineNumber": 264,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12134,
    "kind": "method",
    "name": "select",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#select",
    "access": null,
    "description": null,
    "lineNumber": 267,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12135,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 268,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12136,
    "kind": "method",
    "name": "deselect",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#deselect",
    "access": null,
    "description": null,
    "lineNumber": 270,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12137,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 271,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12138,
    "kind": "method",
    "name": "toggleSelected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#toggleSelected",
    "access": null,
    "description": null,
    "lineNumber": 273,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12139,
    "kind": "member",
    "name": "selected",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#selected",
    "access": null,
    "description": null,
    "lineNumber": 274,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12140,
    "kind": "get",
    "name": "hasChildren",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#hasChildren",
    "access": null,
    "description": null,
    "lineNumber": 278,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12141,
    "kind": "method",
    "name": "addChild",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#addChild",
    "access": null,
    "description": null,
    "lineNumber": 283,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "child",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 12142,
    "kind": "method",
    "name": "_attach",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_attach",
    "access": null,
    "description": null,
    "lineNumber": 328,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12143,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 332,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12144,
    "kind": "method",
    "name": "_detach",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_detach",
    "access": null,
    "description": null,
    "lineNumber": 337,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": []
  },
  {
    "__docId__": 12145,
    "kind": "member",
    "name": "_isAttached",
    "memberof": "src/Leaflet.NestedLayer.js~NestedLayer",
    "static": false,
    "longname": "src/Leaflet.NestedLayer.js~NestedLayer#_isAttached",
    "access": null,
    "description": null,
    "lineNumber": 341,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 12146,
    "kind": "file",
    "name": "src/Leaflet.NestedLayerTreeHelper.js",
    "content": "// import NestedLayer from './Leaflet.NestedLayer';\n// import { assign } from 'lodash';\n\n// recursively traverses down the tree looking for the first matching NestedLayer\n// \"tree\" here is expected to be an array of NestedLayers\nexport function getLayerByUniqueProp(tree, key, val) {\n  for (let i = 0; i < tree.length; i++) {\n\n    if (tree[i][key] === val) {\n      // base case A: we found a matching element at the root of the tree\n      return tree[i];\n\n    } else if (tree[i].hasChildren) {\n\n      // recursive step: search the element's tree\n      let result = getLayerByUniqueProp(tree[i].children, key, val);\n      if (result !== null) {\n        // base case B: element found within a subtree\n        return result;\n      }\n\n    }\n\n  }\n\n  // base case C: not found\n  return null;\n}\n\nexport function getLayerByID(tree, id) {\n  return getLayerByUniqueProp(tree, 'id', id);\n}\n\nexport function getLayerByLayerID(tree, id) {\n  return getLayerByUniqueProp(tree, 'layerID', id);\n}\n\nexport function applyStateChangeToLayer(layer, change) {\n  // copies each key/value in \"change\" onto \"layer\"\n  // triggers the getters/setters in NestedLayer\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n  Object.assign(layer, change);\n}\n\n/**\n * Applies a state change (or changes) to a tree or substree\n * @param  {NestedLayer[]} tree   Tree or subtree of NestedLayers\n * @param  {Object} change A key/value pair of state changes to apply to each layer in the tree\n */\nexport function applyStateChangeToTree(tree, change) {\n  for (let i = 0; i < tree.length; i++) {\n    applyStateChangeToLayer(tree[i], change);\n\n    if (tree[i].hasChildren) {\n      applyStateChangeToTree(tree[i].children, change);\n    }\n  }\n}\n\n/**\n * Modifies (if necessary) the enabled state of layers in the tree according to the following rules:\n * 1. All the descendents of an enabled layer are also enabled.\n * 2. All the descendents of a disabled layer are also disabled.\n * @param  {[type]} tree [description]\n * @return {[type]}      [description]\n */\n// export function validateEnabledStates(tree) {\n\n// }\n",
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12147,
    "kind": "function",
    "name": "getLayerByUniqueProp",
    "memberof": "src/Leaflet.NestedLayerTreeHelper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js~getLayerByUniqueProp",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayerTreeHelper.js",
    "importStyle": "{getLayerByUniqueProp}",
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "tree",
        "types": [
          "*"
        ]
      },
      {
        "name": "key",
        "types": [
          "*"
        ]
      },
      {
        "name": "val",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12148,
    "kind": "function",
    "name": "getLayerByID",
    "memberof": "src/Leaflet.NestedLayerTreeHelper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js~getLayerByID",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayerTreeHelper.js",
    "importStyle": "{getLayerByID}",
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "tree",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12149,
    "kind": "function",
    "name": "getLayerByLayerID",
    "memberof": "src/Leaflet.NestedLayerTreeHelper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js~getLayerByLayerID",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayerTreeHelper.js",
    "importStyle": "{getLayerByLayerID}",
    "description": null,
    "lineNumber": 34,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "tree",
        "types": [
          "*"
        ]
      },
      {
        "name": "id",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12150,
    "kind": "function",
    "name": "applyStateChangeToLayer",
    "memberof": "src/Leaflet.NestedLayerTreeHelper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js~applyStateChangeToLayer",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayerTreeHelper.js",
    "importStyle": "{applyStateChangeToLayer}",
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "layer",
        "types": [
          "*"
        ]
      },
      {
        "name": "change",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 12151,
    "kind": "function",
    "name": "applyStateChangeToTree",
    "memberof": "src/Leaflet.NestedLayerTreeHelper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Leaflet.NestedLayerTreeHelper.js~applyStateChangeToTree",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.NestedLayerTreeHelper.js",
    "importStyle": "{applyStateChangeToTree}",
    "description": "Applies a state change (or changes) to a tree or substree",
    "lineNumber": 50,
    "params": [
      {
        "nullable": null,
        "types": [
          "NestedLayer[]"
        ],
        "spread": false,
        "optional": false,
        "name": "tree",
        "description": "Tree or subtree of NestedLayers"
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "change",
        "description": "A key/value pair of state changes to apply to each layer in the tree"
      }
    ]
  },
  {
    "__docId__": 12152,
    "kind": "file",
    "name": "src/Leaflet.Symbology.js",
    "content": "import { defaultsDeep as defaults } from 'lodash';\n\nexport default class Symbology {\n\n  static _defaults = {\n\n  }\n\n  constructor(props) {\n    // merge props with defaults\n    this._props = {};\n    // https://lodash.com/docs/4.17.4#defaultsDeep\n    defaults(this._props, props, this.defaults);\n  }\n\n  get label() {\n    return this._props.label;\n  }\n  set label(val) {\n    this._props.label = val;\n  }\n\n  get defaults() {\n    // uses reflection to return the static _defaults property on the class\n    return this.constructor._defaults;\n  }\n}\n",
    "static": true,
    "longname": "src/Leaflet.Symbology.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12153,
    "kind": "class",
    "name": "Symbology",
    "memberof": "src/Leaflet.Symbology.js",
    "static": true,
    "longname": "src/Leaflet.Symbology.js~Symbology",
    "access": null,
    "export": true,
    "importPath": "leaflet.control.nestedlayers/src/Leaflet.Symbology.js",
    "importStyle": "Symbology",
    "description": null,
    "lineNumber": 3,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 12154,
    "kind": "member",
    "name": "_defaults",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "static": true,
    "longname": "src/Leaflet.Symbology.js~Symbology._defaults",
    "access": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 12155,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Symbology.js~Symbology#constructor",
    "access": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 12156,
    "kind": "member",
    "name": "_props",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "static": false,
    "longname": "src/Leaflet.Symbology.js~Symbology#_props",
    "access": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{}"
      ]
    }
  },
  {
    "__docId__": 12157,
    "kind": "get",
    "name": "label",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Symbology.js~Symbology#label",
    "access": null,
    "description": null,
    "lineNumber": 16,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12158,
    "kind": "set",
    "name": "label",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Symbology.js~Symbology#label",
    "access": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12159,
    "kind": "get",
    "name": "defaults",
    "memberof": "src/Leaflet.Symbology.js~Symbology",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Leaflet.Symbology.js~Symbology#defaults",
    "access": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 12160,
    "kind": "file",
    "name": "src/components/LeafletTOC.js",
    "content": "",
    "static": true,
    "longname": "src/components/LeafletTOC.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12161,
    "kind": "file",
    "name": "src/components/MapSymbol.js",
    "content": "",
    "static": true,
    "longname": "src/components/MapSymbol.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12162,
    "kind": "file",
    "name": "src/components/MapSymbology.js",
    "content": "",
    "static": true,
    "longname": "src/components/MapSymbology.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12163,
    "kind": "file",
    "name": "src/components/NestedLayer.js",
    "content": "",
    "static": true,
    "longname": "src/components/NestedLayer.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12164,
    "kind": "file",
    "name": "src/index.js",
    "content": "import L from 'leaflet-headless';\nimport NestedLayer from './Leaflet.NestedLayer';\nimport LayerHierarchy from './Leaflet.LayerHierarchy';\nimport MapServerParser from './Leaflet.LayerHierarchy.MapServerParser';\nimport NestedLayers from './Leaflet.Control.NestedLayers';\n\nlet exports = {\n  NestedLayer,\n  LayerHierarchy,\n  MapServerParser,\n  NestedLayers\n}\n\nif (typeof window !== 'undefined' && typeof L !== 'undefined') {\n  L.NestedLayer = exports.NestedLayer;\n  L.LayerHierarchy = exports.LayerHierarchy;\n  L.MapServerParser = exports.MapServerParser;\n  L.Control.NestedLayers = exports.NestedLayers;\n\n  L.nestedLayer = function nestedLayer(options) {\n    return new exports.NestedLayer(options);\n  };\n  L.layerHierarchy = function layerHierarchy(options) {\n    return new exports.LayerHierarchy(options);\n  };\n  L.mapServerParser = function mapServerParser(url, map, options) {\n    return new exports.MapServerParser(url, map, options);\n  };\n  L.control.nestedLayers = function nestedLayers(hierarchy, element, options) {\n    return new exports.NestedLayers(hierarchy, element, options);\n  };\n}\n\nmodule.exports = exports;\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12165,
    "kind": "variable",
    "name": "exports",
    "memberof": "src/index.js",
    "static": true,
    "longname": "src/index.js~exports",
    "access": null,
    "export": false,
    "importPath": "leaflet.control.nestedlayers/src/index.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"NestedLayer\": *, \"LayerHierarchy\": *, \"MapServerParser\": *, \"NestedLayers\": *}"
      ]
    }
  },
  {
    "__docId__": 12167,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12168,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12169,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12170,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12171,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12172,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12173,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12174,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12175,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12176,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12177,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12178,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12179,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12180,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12181,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12182,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12183,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12184,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12185,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12186,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12187,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12188,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12189,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12190,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12191,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12192,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12193,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12194,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12195,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12196,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12197,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12198,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12199,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12200,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12201,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12202,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12203,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12204,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12205,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12206,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12207,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12208,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12209,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12210,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12211,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12212,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12213,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 12215,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12216,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12217,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12218,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12219,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12220,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12221,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12222,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 12223,
    "kind": "testFile",
    "name": "test/Leaflet.Control.NestedLayers.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport NestedLayers from './../src/Leaflet.Control.NestedLayers';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport jsdom from 'jsdom';\n\n// describe('TOCComponent', () => {\n\n// })\n\n// describe('NestedLayerComponent', () => {\n\n// })\n\n// describe('NestedLayers Plugin', () => {\n\n// })\n\ndescribe( 'NestedLayers', () => {\n\n  let control, h, el;\n  const { JSDOM } = jsdom;\n\n  beforeEach(() => {\n    h = new LayerHierarchy();\n    el = JSDOM.fragment('<div id=\"test-element\"></div>');\n    control = new NestedLayers(h, el);\n  });\n\n  afterEach(() => {\n    control.detach();\n  });\n\n  it('should have required arguments on construction', () => {\n    expect(() => {\n      let invalidControl = new NestedLayers(undefined, undefined);\n    }).to.throw();\n    expect(() => {\n      let invalidControl = new NestedLayers(undefined, el);\n    }).to.throw('hierarchy');\n    expect(() => {\n      let invalidControl = new NestedLayers(h, undefined);\n    }).to.throw('element');\n  });\n\n  it('should have default (configuration) options', () => {\n    // expect(control.options).to.be.an('object').that.is.not.empty;\n    expect(control.options).to.have.all.keys([\n      'followAncestorVisibility',\n      'followAncestorMutability',\n      'propogateDeselectToChildren'\n    ]);\n  });\n\n\n\n  // it('should have better tests written', () => {\n  //   let betterTestsWritten = false;\n  //   expect(betterTestsWritten).to.be.true;\n  // });\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12224,
    "kind": "testDescribe",
    "name": "describe3184",
    "testId": 3184,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe3184",
    "access": null,
    "description": "NestedLayers",
    "lineNumber": 19
  },
  {
    "__docId__": 12225,
    "kind": "testIt",
    "name": "it3185",
    "testId": 3185,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js~describe3184",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe3184.it3185",
    "access": null,
    "description": "should have required arguments on construction",
    "lineNumber": 34
  },
  {
    "__docId__": 12226,
    "kind": "testIt",
    "name": "it3186",
    "testId": 3186,
    "memberof": "test/Leaflet.Control.NestedLayers.spec.js~describe3184",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.Control.NestedLayers.spec.js~describe3184.it3186",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 46
  },
  {
    "__docId__": 12227,
    "kind": "testFile",
    "name": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\n// this package must be imported before MapServerParser for testing purposes\n// MapServerParser imports esri-leaflet, which imports Leaflet, which throws errors when\n// run in a headless environment\nimport 'leaflet-headless';\n\nimport MapServerParser from './../src/Leaflet.LayerHierarchy.MapServerParser';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport Promise from 'bluebird';\nimport { Map } from 'leaflet-headless';\n\n// import chalk from 'chalk';\nimport sinon from 'sinon';\n\ndescribe.skip( 'MapServerParser', () => {\n\n  let url, map, options, parser;\n  before( () => {\n    // setup fixture data\n    url = 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer';\n    // stubbing Leaflet's Map prevents us from actually calling the Map constructor, which would require\n    // a HTMLElement to use; getting JSDOM to work with Map is more trouble that it's worth\n    // however, checks like `map instanceof Map` still pass with the stub\n    map = sinon.createStubInstance(Map);\n    options = {\n      data: {\n        scale: false,\n        defaultVisibility: false,\n        swatch: true\n      },\n      hierarchyOptions: {\n        followAncestorVisibility: false,\n        propogateDeselectToChildren: true,\n        followAncestorMutability: false\n      }\n    };\n    parser = new MapServerParser(url, map, options);\n  } );\n\n  describe('#url', () => {\n    it('should be able to get the MapServer url', () => {\n      expect(parser.url).to.be.a('string').that.has.string(url);\n    });\n  })\n\n  describe('#map', () => {\n    it('should be able to get the Leaflet map object', () => {\n      expect(parser.map).to.be.an.instanceof(Map).and.to.equal(map);\n    });\n  })\n\n  describe('#options', () => {\n    it('should be able to get configuration options', () => {\n      expect(parser.options).to.be.an('object').that.has.all.deep.keys(options);\n    })\n  })\n\n  describe('#defaults', () => {\n    it('should have default configuration options accessible always', () => {\n      expect(parser.defaults).to.be.an('object').that.has.all.deep.keys(options);\n    })\n  })\n\n  describe('#constructor', () => {\n    it('should throw errors if required arguments are missing', () => {\n      expect(() => {\n        let p = new MapServerParser();\n      }).to.throw();\n      expect(() => {\n        let p = new MapServerParser(undefined, map, options);\n      }).to.throw('URL');\n      expect(() => {\n        let p = new MapServerParser(url, undefined, options);\n      }).to.throw('map');\n    });\n\n    it('should have default (configuration) options', () => {\n      // create a new parser without any options passed\n      // so we can assert that it uses default options of some sort\n      let p = new MapServerParser(url, map);\n      expect(p.options).to.be.an('object').that.has.all.deep.keys(options)\n    });\n\n    it('should merge options with defaults', () => {\n      const o = { data: { scale: false } };\n      let p = new MapServerParser(url, map, o);\n      expect(p.options).to.be.an('object').that.has.all.deep.keys(options);\n      expect(p.options.data.scale).to.be.false;\n      expect(p.options.data.defaultVisibility).to.exist.and.to.equal(p.defaults.data.defaultVisibility);\n    });\n  })\n\n  describe('#parse', () => {\n\n    let promise;\n    before(() => {\n      promise = parser.parse();\n    });\n\n    it('should return a promise', () => {\n      expect(promise).to.be.an.instanceof(Promise);\n    });\n\n    it('should resolve the promise', () => {\n      return expect(promise).to.be.fulfilled;\n    });\n\n    it.skip('should resolve the promise with a LayerHierarchy', () => {\n      return expect(promise).to.eventually.be.an.instanceof(LayerHierarchy);\n    });\n  })\n\n  describe('#_queryLayers', () => {\n    it('should return a promise', () => {\n      expect(parser._queryLayers()).to.be.an.instanceof(Promise);\n    });\n  })\n\n  describe('#_queryLegend', () => {\n    it('should return a promise', () => {\n      expect(parser._queryLayers()).to.be.an.instanceof(Promise);\n    });\n  })\n\n  describe('._makeLayerURL', () => {\n    it('should require valid parameters', () => {\n      expect(function noParams() {\n        MapServerParser._makeLayerURL()\n      }).to.throw();\n      expect(function missingURL() {\n        MapServerParser._makeLayerURL(undefined, 0)\n      }).to.throw('URL');\n      expect(function invalidURLType() {\n        MapServerParser._makeLayerURL({}, 0)\n      }).to.throw('URL');\n      expect(function missingID() {\n        MapServerParser._makeLayerURL('foo', undefined);\n      }).to.throw('ID');\n      expect(function invalidIDType() {\n        MapServerParser._makeLayerURL('foo', {});\n      }).to.throw('ID');\n    });\n\n    it('should make valid URLs', () => {\n      const fixture1 = {\n        base: 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer',\n        id: 0,\n        result: 'https://gis.worldviewsolutions.com/arcgis/rest/services/accomack/public/MapServer/0'\n      };\n      const fixture2 = {\n        base: 'MapServer',\n        id: 42,\n        result: 'MapServer/42'\n      }\n\n      expect(MapServerParser._makeLayerURL(fixture1.base, fixture1.id)).to.equal(fixture1.result);\n      expect(MapServerParser._makeLayerURL(fixture2.base, fixture2.id)).to.equal(fixture2.result);\n    });\n  })\n\n  describe('#_convertLayerNodeToNestedLayer)', () => {\n      // fixture node data\n    let node = {\"currentVersion\":10.31,\"id\":26,\"name\":\"County Resources\",\"type\":\"Group Layer\",\"description\":\"\",\"geometryType\":null,\"copyrightText\":\"\",\"parentLayer\":null,\"subLayers\":[{\"id\":27,\"name\":\"Fire and Rescue Stations\"},{\"id\":28,\"name\":\"Fire Response\"},{\"id\":29,\"name\":\"Rescue Response\"},{\"id\":30,\"name\":\"Fire Districts\"},{\"id\":31,\"name\":\"Rescue Districts\"},{\"id\":32,\"name\":\"County Administration Building\"},{\"id\":33,\"name\":\"Airports\"},{\"id\":34,\"name\":\"Schools\"},{\"id\":35,\"name\":\"Solid Waste Disposal Facilities\"},{\"id\":36,\"name\":\"Boating Public Access Sites\"},{\"id\":37,\"name\":\"Polling Places\"}],\"minScale\":0,\"maxScale\":0,\"defaultVisibility\":true,\"extent\":{\"xmin\":-8465355.1356,\"ymin\":4501816.1559,\"xmax\":-8375617.3878,\"ymax\":4583811.349899999,\"spatialReference\":{\"wkid\":102100,\"latestWkid\":3857}},\"hasAttachments\":false,\"htmlPopupType\":\"esriServerHTMLPopupTypeNone\",\"displayField\":\"\",\"typeIdField\":null,\"fields\":null,\"relationships\":[],\"canModifyLayer\":false,\"canScaleSymbols\":false,\"hasLabels\":false,\"capabilities\":\"Map,Query\",\"supportsStatistics\":false,\"supportsAdvancedQueries\":false,\"supportedQueryFormats\":\"JSON, AMF\",\"ownershipBasedAccessControlForFeatures\":{\"allowOthersToQuery\":true},\"useStandardizedQueries\":true,\"advancedQueryCapabilities\":{\"useStandardizedQueries\":true,\"supportsStatistics\":false,\"supportsOrderBy\":false,\"supportsDistinct\":false,\"supportsPagination\":false,\"supportsTrueCurve\":true,\"supportsReturningQueryExtent\":true,\"supportsQueryWithDistance\":true}};\n    const fakeLegend = [];\n\n    it('should trim whitespace around a layer name', () => {\n      node.name = '  TEST  \\t\\n';\n      let l = parser._convertLayerNodeToNestedLayer(node, fakeLegend);\n      expect(l.name).to.equal('TEST');\n    });\n  })\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12228,
    "kind": "testDescribe",
    "name": "describe3187",
    "testId": 3187,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3187",
    "access": null,
    "description": "#url",
    "lineNumber": 41
  },
  {
    "__docId__": 12229,
    "kind": "testIt",
    "name": "it3188",
    "testId": 3188,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3187",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3187.it3188",
    "access": null,
    "description": "should be able to get the MapServer url",
    "lineNumber": 42
  },
  {
    "__docId__": 12230,
    "kind": "testDescribe",
    "name": "describe3189",
    "testId": 3189,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3189",
    "access": null,
    "description": "#map",
    "lineNumber": 47
  },
  {
    "__docId__": 12231,
    "kind": "testIt",
    "name": "it3190",
    "testId": 3190,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3189",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3189.it3190",
    "access": null,
    "description": "should be able to get the Leaflet map object",
    "lineNumber": 48
  },
  {
    "__docId__": 12232,
    "kind": "testDescribe",
    "name": "describe3191",
    "testId": 3191,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3191",
    "access": null,
    "description": "#options",
    "lineNumber": 53
  },
  {
    "__docId__": 12233,
    "kind": "testIt",
    "name": "it3192",
    "testId": 3192,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3191",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3191.it3192",
    "access": null,
    "description": "should be able to get configuration options",
    "lineNumber": 54
  },
  {
    "__docId__": 12234,
    "kind": "testDescribe",
    "name": "describe3193",
    "testId": 3193,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3193",
    "access": null,
    "description": "#defaults",
    "lineNumber": 59
  },
  {
    "__docId__": 12235,
    "kind": "testIt",
    "name": "it3194",
    "testId": 3194,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3193",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3193.it3194",
    "access": null,
    "description": "should have default configuration options accessible always",
    "lineNumber": 60
  },
  {
    "__docId__": 12236,
    "kind": "testDescribe",
    "name": "describe3195",
    "testId": 3195,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195",
    "access": null,
    "description": "#constructor",
    "lineNumber": 65
  },
  {
    "__docId__": 12237,
    "kind": "testIt",
    "name": "it3196",
    "testId": 3196,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195.it3196",
    "access": null,
    "description": "should throw errors if required arguments are missing",
    "lineNumber": 66
  },
  {
    "__docId__": 12238,
    "kind": "testIt",
    "name": "it3197",
    "testId": 3197,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195.it3197",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 78
  },
  {
    "__docId__": 12239,
    "kind": "testIt",
    "name": "it3198",
    "testId": 3198,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3195.it3198",
    "access": null,
    "description": "should merge options with defaults",
    "lineNumber": 85
  },
  {
    "__docId__": 12240,
    "kind": "testDescribe",
    "name": "describe3199",
    "testId": 3199,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3199",
    "access": null,
    "description": "#parse",
    "lineNumber": 94
  },
  {
    "__docId__": 12241,
    "kind": "testIt",
    "name": "it3200",
    "testId": 3200,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3199",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3199.it3200",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 101
  },
  {
    "__docId__": 12242,
    "kind": "testIt",
    "name": "it3201",
    "testId": 3201,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3199",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3199.it3201",
    "access": null,
    "description": "should resolve the promise",
    "lineNumber": 105
  },
  {
    "__docId__": 12243,
    "kind": "testDescribe",
    "name": "describe3202",
    "testId": 3202,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3202",
    "access": null,
    "description": "#_queryLayers",
    "lineNumber": 114
  },
  {
    "__docId__": 12244,
    "kind": "testIt",
    "name": "it3203",
    "testId": 3203,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3202",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3202.it3203",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 115
  },
  {
    "__docId__": 12245,
    "kind": "testDescribe",
    "name": "describe3204",
    "testId": 3204,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3204",
    "access": null,
    "description": "#_queryLegend",
    "lineNumber": 120
  },
  {
    "__docId__": 12246,
    "kind": "testIt",
    "name": "it3205",
    "testId": 3205,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3204",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3204.it3205",
    "access": null,
    "description": "should return a promise",
    "lineNumber": 121
  },
  {
    "__docId__": 12247,
    "kind": "testDescribe",
    "name": "describe3206",
    "testId": 3206,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3206",
    "access": null,
    "description": "._makeLayerURL",
    "lineNumber": 126
  },
  {
    "__docId__": 12248,
    "kind": "testIt",
    "name": "it3207",
    "testId": 3207,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3206",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3206.it3207",
    "access": null,
    "description": "should require valid parameters",
    "lineNumber": 127
  },
  {
    "__docId__": 12249,
    "kind": "testIt",
    "name": "it3208",
    "testId": 3208,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3206",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3206.it3208",
    "access": null,
    "description": "should make valid URLs",
    "lineNumber": 145
  },
  {
    "__docId__": 12250,
    "kind": "testDescribe",
    "name": "describe3209",
    "testId": 3209,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3209",
    "access": null,
    "description": "#_convertLayerNodeToNestedLayer)",
    "lineNumber": 162
  },
  {
    "__docId__": 12251,
    "kind": "testIt",
    "name": "it3210",
    "testId": 3210,
    "memberof": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3209",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.MapServerParser.spec.js~describe3209.it3210",
    "access": null,
    "description": "should trim whitespace around a layer name",
    "lineNumber": 167
  },
  {
    "__docId__": 12252,
    "kind": "testFile",
    "name": "test/Leaflet.LayerHierarchy.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport NestedLayer from './../src/Leaflet.NestedLayer';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\ndescribe.skip( 'LayerHierarchy', () => {\n\n  function stubLayer(id) {\n    return {\n      id,\n      addTo: function() {},\n      removeFrom: function() {},\n      remove: function() {},\n      on: function() {}\n    }\n  }\n\n  let h, layers, l, layerData, ownedLayer,\n      l0,     l1,     l2,     l3,     l4,\n      layer0, layer1, layer2, layer3, layer4;\n  beforeEach( () => {\n    layerData = {\n      id: 999,\n      name: 'Layer 999',\n      layer: stubLayer(999),\n      map: {}\n    };\n    l = new NestedLayer(layerData);\n\n    l2 = {\n      id: 2,\n      name: 'Layer 2',\n      layer: stubLayer(2),\n      map: {},\n      children: []\n    };\n    l3 = {\n      id: 3,\n      name: 'Layer 3',\n      layer: stubLayer(3),\n      map: {},\n      children: []\n    }\n    layer2 = new NestedLayer(l2);\n    layer3 = new NestedLayer(l3);\n\n    l1 = {\n      id: 1,\n      name: 'Layer 1',\n      layer: stubLayer(1),\n      map: {},\n      children: [layer2, layer3]\n    }\n    layer1 = new NestedLayer(l1);\n\n    l0 = {\n      id: 0,\n      name: 'Layer 0',\n      layer: stubLayer(0),\n      map: {},\n      children: [layer1]\n    }\n    layer0 = new NestedLayer(l0);\n\n    l4 = {\n      id: 4,\n      name: 'Layer 4',\n      layer: stubLayer(4),\n      map: {},\n      children: []\n    }\n    layer4 = new NestedLayer(l4);\n\n    layers = [layer0, layer4];\n    h = new LayerHierarchy({layers});\n\n    ownedLayer = h.makeLayer(layerData);\n  } );\n\n  it('should have default (configuration) options', () => {\n    // expect(control.options).to.be.an('object').that.is.not.empty;\n    expect(h.options).to.have.all.keys([\n      'followAncestorVisibility',\n      'followAncestorMutability',\n      'propogateDeselectToChildren'\n    ]);\n  });\n\n  it('should be able to make layers with a factory method', () => {\n    expect(ownedLayer).to.be.an.instanceOf(NestedLayer);\n  });\n\n  it('should be able own layers', () => {\n    expect(ownedLayer.owner).to.equal(h);\n    expect(ownedLayer.isOwnedBy(h)).to.be.true;\n\n    const nonOwner = {};\n    expect(ownedLayer.owner).to.not.equal(nonOwner);\n    expect(ownedLayer.isOwnedBy(nonOwner)).to.be.false;\n  });\n\n  it('should be able to check if it owns a layer', () => {\n    expect(h.ownsLayer(ownedLayer)).to.be.true;\n\n    const nonOwner = new LayerHierarchy();\n    expect(nonOwner.ownsLayer(ownedLayer)).to.be.false;\n  });\n\n  it('should be able to get layers by id', () => {\n    expect(h.getLayerByID(0), 'hierarchy getLayerByID').to.equal(layer0);\n    expect(h.getLayerByID(1), 'hierarchy getLayerByID').to.equal(layer1);\n    expect(h.getLayerByID(2), 'hierarchy getLayerByID').to.equal(layer2);\n    expect(h.getLayerByID(3), 'hierarchy getLayerByID').to.equal(layer3);\n    expect(h.getLayerByID(4), 'hierarchy getLayerByID').to.equal(layer4);\n  });\n\n  it('should not be able to add non-NestedLayer layers', () => {\n    const badLayer = {};\n    expect(() => {\n      h.addLayer(badLayer);\n    }).to.throw(TypeError, 'NestedLayer');\n  });\n\n  it('should be able to add layers at the root level', () => {\n    expect(() => {\n      h.addLayer(l);\n    }).to.not.throw();\n\n    expect(h.getLayerByID(l.id)).to.equal(l);\n    expect(h._layers).to.include(l);\n  });\n\n  it('should be able to add layers below the root level to other layers', () => {\n    expect(() => {\n      h.addLayer(l, layer0.id)\n    }).to.not.throw();\n\n    expect(h.getLayerByID(l.id)).to.equal(l);\n    expect(layer0.children).to.include(l);\n  });\n\n  it('should ensure that layers it adds at the root level are owned by it', () => {\n    h.addLayer(l);\n    expect(l.isOwnedBy(h)).to.be.true;\n  });\n\n  it('should ensure that layers it adds below the root level are owned by it', () => {\n    h.addLayer(l, layer0.id)\n    expect(l.isOwnedBy(h)).to.be.true;\n  });\n\n  it('should own all layers it was created with', () => {\n    expect(layer0.isOwnedBy(h)).to.be.true;\n    // expect(layer1.isOwnedBy(h)).to.be.true;\n    // expect(layer2.isOwnedBy(h)).to.be.true;\n    // expect(layer3.isOwnedBy(h)).to.be.true;\n    // expect(layer4.isOwnedBy(h)).to.be.true;\n  })\n\n  it('should have valid enabled states upon creation', () => {\n    // use a customized subset of the fixtures for this test\n    // layers 1 and 2 are enabled and children of layer 0, which is disabled\n    // layer 3 is enabled and a child of layer 2\n    // layer 4 is disabled and a child of layer 2\n    // at the start of the test\n    l3.enabled = true;\n    layer3 = new NestedLayer(l3);\n    l4.enabled = false;\n    layer4 = new NestedLayer(l4);\n    l1.children = [];\n    l2.children = [layer3, layer4];\n    l1.enabled = l2.enabled = true;\n    layer1 = new NestedLayer(l1);\n    layer2 = new NestedLayer(l2);\n    l0.children = [layer1, layer2];\n    l0.enabled = false;\n    layer0 = new NestedLayer(l0);\n    layers = [layer0];\n    let hierarchy = new LayerHierarchy({layers});\n\n    // the constructor should have validated the enabled state of all the layers\n    // layers 1 and 2 shoud now be disabled\n\n    expect(layer1.disabled).to.be.true;\n    expect(layer2.disabled).to.be.true;\n    expect(layer3.disabled).to.be.true;\n    expect(layer4.disabled).to.be.true;\n  });\n\n} );\n",
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12253,
    "kind": "testIt",
    "name": "it3211",
    "testId": 3211,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3211",
    "access": null,
    "description": "should have default (configuration) options",
    "lineNumber": 79
  },
  {
    "__docId__": 12254,
    "kind": "testIt",
    "name": "it3212",
    "testId": 3212,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3212",
    "access": null,
    "description": "should be able to make layers with a factory method",
    "lineNumber": 88
  },
  {
    "__docId__": 12255,
    "kind": "testIt",
    "name": "it3213",
    "testId": 3213,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3213",
    "access": null,
    "description": "should be able own layers",
    "lineNumber": 92
  },
  {
    "__docId__": 12256,
    "kind": "testIt",
    "name": "it3214",
    "testId": 3214,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3214",
    "access": null,
    "description": "should be able to check if it owns a layer",
    "lineNumber": 101
  },
  {
    "__docId__": 12257,
    "kind": "testIt",
    "name": "it3215",
    "testId": 3215,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3215",
    "access": null,
    "description": "should be able to get layers by id",
    "lineNumber": 108
  },
  {
    "__docId__": 12258,
    "kind": "testIt",
    "name": "it3216",
    "testId": 3216,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3216",
    "access": null,
    "description": "should not be able to add non-NestedLayer layers",
    "lineNumber": 116
  },
  {
    "__docId__": 12259,
    "kind": "testIt",
    "name": "it3217",
    "testId": 3217,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3217",
    "access": null,
    "description": "should be able to add layers at the root level",
    "lineNumber": 123
  },
  {
    "__docId__": 12260,
    "kind": "testIt",
    "name": "it3218",
    "testId": 3218,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3218",
    "access": null,
    "description": "should be able to add layers below the root level to other layers",
    "lineNumber": 132
  },
  {
    "__docId__": 12261,
    "kind": "testIt",
    "name": "it3219",
    "testId": 3219,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3219",
    "access": null,
    "description": "should ensure that layers it adds at the root level are owned by it",
    "lineNumber": 141
  },
  {
    "__docId__": 12262,
    "kind": "testIt",
    "name": "it3220",
    "testId": 3220,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3220",
    "access": null,
    "description": "should ensure that layers it adds below the root level are owned by it",
    "lineNumber": 146
  },
  {
    "__docId__": 12263,
    "kind": "testIt",
    "name": "it3221",
    "testId": 3221,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3221",
    "access": null,
    "description": "should own all layers it was created with",
    "lineNumber": 151
  },
  {
    "__docId__": 12264,
    "kind": "testIt",
    "name": "it3222",
    "testId": 3222,
    "memberof": "test/Leaflet.LayerHierarchy.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.LayerHierarchy.spec.js~it3222",
    "access": null,
    "description": "should have valid enabled states upon creation",
    "lineNumber": 159
  },
  {
    "__docId__": 12265,
    "kind": "testFile",
    "name": "test/Leaflet.NestedLayer.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport { generateID } from './../src/Leaflet.NestedLayer';\nimport NestedLayer from './../src/Leaflet.NestedLayer';\nimport LayerHierarchy from './../src/Leaflet.LayerHierarchy';\n\nimport L from 'leaflet-headless';\nimport sinon from 'sinon';\n\ndescribe('#generateID', () => {\n  it('should return numbers', () => {\n    expect(generateID()).to.be.a('number');\n  })\n\n  it('shouldn\\'t generate the same ID twice', () => {\n    const a = generateID(), b = generateID();\n    expect(a).to.not.equal(b);\n  })\n})\n\ndescribe('NestedLayer', () => {\n  let l;\n  let layerStub = sinon.createStubInstance(L.Layer);\n  let mapStub = sinon.createStubInstance(L.Map);\n\n  beforeEach(() => {\n    l = new NestedLayer(666, 'Layer 666', layerStub, mapStub);\n  })\n\n  it('should have accessible properties', () => {\n    expect(l).to.have.property('layerID');\n    expect(l).to.have.property('name');\n    expect(l).to.have.property('enabled');\n    expect(l).to.have.property('selected');\n    expect(l).to.have.property('layer');\n    expect(l).to.have.property('children');\n    expect(l).to.have.property('parent');\n    expect(l).to.have.property('minZoom');\n    expect(l).to.have.property('maxZoom');\n    expect(l).to.have.property('rules');\n    expect(l).to.have.property('id');\n  })\n\n  describe('#constructor', () => {\n    it('should throw errors when missing required arguments', () => {\n      const layerID = 999;\n      const name = 'Layer 999';\n      expect(function() {\n        new NestedLayer(undefined, name, layerStub, mapStub);\n      }).to.throw('layer ID');\n\n      expect(function() {\n        new NestedLayer(layerID, undefined, layerStub, mapStub);\n      }).to.throw('name');\n\n      expect(function() {\n        new NestedLayer(layerID, name, undefined, mapStub);\n      }).to.throw('layer object');\n\n      expect(function() {\n        new NestedLayer(layerID, name, layerStub, undefined);\n      }).to.throw('map object');\n    })\n\n    it('should have defaults for optional arguments', () => {\n      expect(l.parent).to.equal(l.defaults.parent);\n      // .equal tests referential equality (===)\n      // .eql tests deep equality\n      // http://chaijs.com/api/bdd/#method_eql\n      expect(l.children).to.eql(l.defaults.children);\n      expect(l.enabled).to.equal(l.defaults.enabled);\n      expect(l.selected).to.equal(l.defaults.selected);\n      expect(l.zoom).to.equal(l.defaults.zoom);\n    })\n  })\n\n  describe('#enabled', () => {\n    before(() => {\n      l = new NestedLayer(666, 'Layer 666', layerStub, mapStub, {\n        rules: {\n          enableTriggersAttach: true\n        }\n      });\n    })\n\n    beforeEach(() => {\n      sinon.spy(l, '_attach');\n      sinon.spy(l, '_detach');\n    })\n\n    afterEach(() => {\n      l._attach.restore();\n      l._detach.restore();\n    })\n\n    it('should detach when disabled', () => {\n      l.disable();\n      expect(l.disabled).to.be.true;\n      expect(l._detach).to.have.been.called;\n    })\n\n    it('should attach when enabled and selected and enableTriggersAttach is true', () => {\n      l.select();\n      l.enable();\n      expect(l.enabled).to.be.true;\n      expect(l.selected).to.be.true;\n      expect(l.rules.enableTriggersAttach).to.be.true;\n      expect(l._attach).to.have.been.called;\n    })\n  })\n\n  describe('#selected', () => {\n    it('should be deselected when selected but disabled and alwaysDeselectedWhenDisabled is true', () => {\n      l = new NestedLayer(666, 'Layer 666', layerStub, mapStub, {\n        rules: {\n          alwaysDeselectedWhenDisabled: true\n        }\n      });\n\n      l.select();\n      l.disable();\n      expect(l.disabled).to.be.true;\n      expect(l.rules.alwaysDeselectedWhenDisabled).to.be.true;\n      expect(l.deselected).to.be.true;\n    })\n\n    it('should always return the selected state when alwaysDeselectedWhenDisabled is false', () => {\n      l = new NestedLayer(666, 'Layer 666', layerStub, mapStub, {\n        rules: {\n          alwaysDeselectedWhenDisabled: false\n        }\n      });\n\n      l.select();\n      l.disable();\n      expect(l.selected).to.be.true;\n      l.enable();\n      expect(l.selected).to.be.true;\n\n      l.deselect();\n      l.disable();\n      expect(l.deselected).to.be.true;\n      l.enable();\n      expect(l.deselected).to.be.true;\n    })\n  })\n\n  describe('#children', () => {\n    let child1, child2;\n\n    before(() => {\n      child1 = new NestedLayer(777, 'Layer 777', layerStub, mapStub);\n      child2 = new NestedLayer(888, 'Layer 888', layerStub, mapStub);\n    })\n\n    it('should be able to add children', () => {\n      l.addChild(child1);\n      l.addChild(child2);\n      expect(l.children).to.contain(child1);\n      expect(l.children).to.contain(child2);\n    })\n\n    it('should only be able to add NestedLayers as children', () => {\n      const badChild = {};\n      expect(() => {\n        l.addChild(badChild);\n      }).to.throw('NestedLayer');\n    })\n\n    it('#hasChildren', () => {\n      expect(l.hasChildren).to.be.false;\n\n      l.addChild(child1);\n      expect(l.hasChildren).to.be.true;\n    })\n  })\n\n})\n",
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12266,
    "kind": "testDescribe",
    "name": "describe3223",
    "testId": 3223,
    "memberof": "test/Leaflet.NestedLayer.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3223",
    "access": null,
    "description": "#generateID",
    "lineNumber": 9
  },
  {
    "__docId__": 12267,
    "kind": "testIt",
    "name": "it3224",
    "testId": 3224,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3223",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3223.it3224",
    "access": null,
    "description": "should return numbers",
    "lineNumber": 10
  },
  {
    "__docId__": 12268,
    "kind": "testIt",
    "name": "it3225",
    "testId": 3225,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3223",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3223.it3225",
    "access": null,
    "description": "shouldn't generate the same ID twice",
    "lineNumber": 14
  },
  {
    "__docId__": 12269,
    "kind": "testDescribe",
    "name": "describe3226",
    "testId": 3226,
    "memberof": "test/Leaflet.NestedLayer.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "access": null,
    "description": "NestedLayer",
    "lineNumber": 20
  },
  {
    "__docId__": 12270,
    "kind": "testIt",
    "name": "it3227",
    "testId": 3227,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.it3227",
    "access": null,
    "description": "should have accessible properties",
    "lineNumber": 29
  },
  {
    "__docId__": 12271,
    "kind": "testDescribe",
    "name": "describe3228",
    "testId": 3228,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3228",
    "access": null,
    "description": "#constructor",
    "lineNumber": 43
  },
  {
    "__docId__": 12272,
    "kind": "testIt",
    "name": "it3229",
    "testId": 3229,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3228",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3228.it3229",
    "access": null,
    "description": "should throw errors when missing required arguments",
    "lineNumber": 44
  },
  {
    "__docId__": 12273,
    "kind": "testIt",
    "name": "it3230",
    "testId": 3230,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3228",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3228.it3230",
    "access": null,
    "description": "should have defaults for optional arguments",
    "lineNumber": 64
  },
  {
    "__docId__": 12274,
    "kind": "testDescribe",
    "name": "describe3231",
    "testId": 3231,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3231",
    "access": null,
    "description": "#enabled",
    "lineNumber": 76
  },
  {
    "__docId__": 12275,
    "kind": "testIt",
    "name": "it3232",
    "testId": 3232,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3231",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3231.it3232",
    "access": null,
    "description": "should detach when disabled",
    "lineNumber": 95
  },
  {
    "__docId__": 12276,
    "kind": "testIt",
    "name": "it3233",
    "testId": 3233,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3231",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3231.it3233",
    "access": null,
    "description": "should attach when enabled and selected and enableTriggersAttach is true",
    "lineNumber": 101
  },
  {
    "__docId__": 12277,
    "kind": "testDescribe",
    "name": "describe3234",
    "testId": 3234,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3234",
    "access": null,
    "description": "#selected",
    "lineNumber": 111
  },
  {
    "__docId__": 12278,
    "kind": "testIt",
    "name": "it3235",
    "testId": 3235,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3234",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3234.it3235",
    "access": null,
    "description": "should be deselected when selected but disabled and alwaysDeselectedWhenDisabled is true",
    "lineNumber": 112
  },
  {
    "__docId__": 12279,
    "kind": "testIt",
    "name": "it3236",
    "testId": 3236,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3234",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3234.it3236",
    "access": null,
    "description": "should always return the selected state when alwaysDeselectedWhenDisabled is false",
    "lineNumber": 126
  },
  {
    "__docId__": 12280,
    "kind": "testDescribe",
    "name": "describe3237",
    "testId": 3237,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237",
    "access": null,
    "description": "#children",
    "lineNumber": 147
  },
  {
    "__docId__": 12281,
    "kind": "testIt",
    "name": "it3238",
    "testId": 3238,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237.it3238",
    "access": null,
    "description": "should be able to add children",
    "lineNumber": 155
  },
  {
    "__docId__": 12282,
    "kind": "testIt",
    "name": "it3239",
    "testId": 3239,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237.it3239",
    "access": null,
    "description": "should only be able to add NestedLayers as children",
    "lineNumber": 162
  },
  {
    "__docId__": 12283,
    "kind": "testIt",
    "name": "it3240",
    "testId": 3240,
    "memberof": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.NestedLayer.spec.js~describe3226.describe3237.it3240",
    "access": null,
    "description": "#hasChildren",
    "lineNumber": 169
  },
  {
    "__docId__": 12284,
    "kind": "testFile",
    "name": "test/Leaflet.Symbology.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport Symbology from './../src/Leaflet.Symbology';\n\ndescribe.skip('Symbology', () => {\n\n  let sym;\n  const fixture = {\n    label: 'ADVERTISED',\n\n  }\n\n  beforeEach(() => {\n    sym = new Symbology();\n  })\n\n  it('should pass', () => {\n    expect(sym).to.be.null;\n  })\n\n  describe('getters and setters', () => {\n    describe('label', () => {\n      it('should be able to get a label')\n    })\n  })\n})\n",
    "static": true,
    "longname": "test/Leaflet.Symbology.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12285,
    "kind": "testIt",
    "name": "it3241",
    "testId": 3241,
    "memberof": "test/Leaflet.Symbology.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.Symbology.spec.js~it3241",
    "access": null,
    "description": "should pass",
    "lineNumber": 16
  },
  {
    "__docId__": 12286,
    "kind": "testDescribe",
    "name": "describe3242",
    "testId": 3242,
    "memberof": "test/Leaflet.Symbology.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/Leaflet.Symbology.spec.js~describe3242",
    "access": null,
    "description": "getters and setters",
    "lineNumber": 20
  },
  {
    "__docId__": 12287,
    "kind": "testDescribe",
    "name": "describe3243",
    "testId": 3243,
    "memberof": "test/Leaflet.Symbology.spec.js~describe3242",
    "testDepth": 1,
    "static": true,
    "longname": "test/Leaflet.Symbology.spec.js~describe3242.describe3243",
    "access": null,
    "description": "label",
    "lineNumber": 21
  },
  {
    "__docId__": 12288,
    "kind": "testIt",
    "name": "it3244",
    "testId": 3244,
    "memberof": "test/Leaflet.Symbology.spec.js~describe3242.describe3243",
    "testDepth": 2,
    "static": true,
    "longname": "test/Leaflet.Symbology.spec.js~describe3242.describe3243.it3244",
    "access": null,
    "description": "should be able to get a label",
    "lineNumber": 22
  },
  {
    "__docId__": 12289,
    "kind": "testFile",
    "name": "test/NestedLayerTreeHelper.spec.js",
    "content": "/*global describe, expect, it, beforeEach*/\nimport * as NestedLayerTreeHelper from './../src/Leaflet.NestedLayerTreeHelper';\nimport NestedLayer from './../src/Leaflet.NestedLayer';\n\nimport L from 'leaflet-headless';\nimport sinon from 'sinon';\n\ndescribe('NestedLayerTreeHelper', () => {\n  let layer;\n  let root1, root2, root3;\n  let child1, child2; // children of root 2\n  let tree;\n  let layerStub = sinon.createStubInstance(L.Layer);\n  let mapStub = sinon.createStubInstance(L.Map);\n  const options = { rules: { alwaysDeselectedWhenDisabled: false } };\n\n  beforeEach('create tree fixture', () => {\n    // layer is an alias for root1\n    layer = root1;\n    root1 =   new NestedLayer(111, 'Layer 111', layerStub, mapStub, options);\n    root2 =   new NestedLayer(222, 'Layer 222', layerStub, mapStub, options);\n    root3 =   new NestedLayer(333, 'Layer 333', layerStub, mapStub, options);\n    child1 =  new NestedLayer(444, 'Layer 444', layerStub, mapStub, options);\n    child2 =  new NestedLayer(555, 'Layer 555', layerStub, mapStub, options);\n    root3.addChild(child1);\n    root3.addChild(child2);\n    tree = [root1, root2, root3];\n  })\n\n  describe('#getLayerByID', () => {\n    it('should find layers by ID', () => {\n      const target = child2;\n      const id = target.id;\n\n      expect(NestedLayerTreeHelper.getLayerByID(tree, id)).to.equal(target);\n    })\n\n    it('should return null if the layer is not found', () => {\n      const id = 12345;\n\n      expect(NestedLayerTreeHelper.getLayerByID(tree, id)).to.be.null;\n    })\n  })\n\n  describe('#getLayerByLayerID', () => {\n    it('should find layers by server ID', () => {\n      const target = child2;\n      const id = target.layerID;\n\n      expect(NestedLayerTreeHelper.getLayerByLayerID(tree, id)).to.equal(target);\n    })\n\n    it('should return null if the layer is not found', () => {\n      const id = 12345;\n\n      expect(NestedLayerTreeHelper.getLayerByLayerID(tree, id)).to.be.null;\n    })\n  })\n\n  describe('#applyStateChangeToLayer', () => {\n    it('should apply valid state changes', () => {\n      const change = {\n        selected: !layer.defaults.selected,\n        enabled: !layer.defaults.enabled\n      };\n      NestedLayerTreeHelper.applyStateChangeToLayer(layer, change);\n\n      expect(layer.selected).to.equal(change.selected);\n      expect(layer.enabled).to.equal(change.enabled);\n    })\n  })\n\n  describe('#applyStateChangeToTree', () => {\n    it('should apply valid state changes', () => {\n      const change = {\n        selected: !layer.defaults.selected,\n        enabled: !layer.defaults.enabled\n      };\n      NestedLayerTreeHelper.applyStateChangeToTree(tree, change);\n\n      expect(root1.selected).to.equal(change.selected);\n      expect(root2.selected).to.equal(change.selected);\n      expect(root3.selected).to.equal(change.selected);\n      expect(child1.selected).to.equal(change.selected);\n      expect(child2.selected).to.equal(change.selected);\n      expect(root1.enabled).to.equal(change.enabled);\n      expect(root2.enabled).to.equal(change.enabled);\n      expect(root3.enabled).to.equal(change.enabled);\n      expect(child1.enabled).to.equal(change.enabled);\n      expect(child2.enabled).to.equal(change.enabled);\n    })\n  })\n})\n",
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12290,
    "kind": "testDescribe",
    "name": "describe3245",
    "testId": 3245,
    "memberof": "test/NestedLayerTreeHelper.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245",
    "access": null,
    "description": "NestedLayerTreeHelper",
    "lineNumber": 8
  },
  {
    "__docId__": 12291,
    "kind": "testDescribe",
    "name": "describe3246",
    "testId": 3246,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245",
    "testDepth": 1,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3246",
    "access": null,
    "description": "#getLayerByID",
    "lineNumber": 30
  },
  {
    "__docId__": 12292,
    "kind": "testIt",
    "name": "it3247",
    "testId": 3247,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3246",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3246.it3247",
    "access": null,
    "description": "should find layers by ID",
    "lineNumber": 31
  },
  {
    "__docId__": 12293,
    "kind": "testIt",
    "name": "it3248",
    "testId": 3248,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3246",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3246.it3248",
    "access": null,
    "description": "should return null if the layer is not found",
    "lineNumber": 38
  },
  {
    "__docId__": 12294,
    "kind": "testDescribe",
    "name": "describe3249",
    "testId": 3249,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245",
    "testDepth": 1,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3249",
    "access": null,
    "description": "#getLayerByLayerID",
    "lineNumber": 45
  },
  {
    "__docId__": 12295,
    "kind": "testIt",
    "name": "it3250",
    "testId": 3250,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3249",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3249.it3250",
    "access": null,
    "description": "should find layers by server ID",
    "lineNumber": 46
  },
  {
    "__docId__": 12296,
    "kind": "testIt",
    "name": "it3251",
    "testId": 3251,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3249",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3249.it3251",
    "access": null,
    "description": "should return null if the layer is not found",
    "lineNumber": 53
  },
  {
    "__docId__": 12297,
    "kind": "testDescribe",
    "name": "describe3252",
    "testId": 3252,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245",
    "testDepth": 1,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3252",
    "access": null,
    "description": "#applyStateChangeToLayer",
    "lineNumber": 60
  },
  {
    "__docId__": 12298,
    "kind": "testIt",
    "name": "it3253",
    "testId": 3253,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3252",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3252.it3253",
    "access": null,
    "description": "should apply valid state changes",
    "lineNumber": 61
  },
  {
    "__docId__": 12299,
    "kind": "testDescribe",
    "name": "describe3254",
    "testId": 3254,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245",
    "testDepth": 1,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3254",
    "access": null,
    "description": "#applyStateChangeToTree",
    "lineNumber": 73
  },
  {
    "__docId__": 12300,
    "kind": "testIt",
    "name": "it3255",
    "testId": 3255,
    "memberof": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3254",
    "testDepth": 2,
    "static": true,
    "longname": "test/NestedLayerTreeHelper.spec.js~describe3245.describe3254.it3255",
    "access": null,
    "description": "should apply valid state changes",
    "lineNumber": 74
  }
]